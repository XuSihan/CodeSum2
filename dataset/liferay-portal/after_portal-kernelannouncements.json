[{"methodBody": ["METHOD_START", "{", "return    _ companyId ;", "}", "METHOD_END"], "methodName": ["getCompanyId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ deliveryId ;", "}", "METHOD_END"], "methodName": ["getDeliveryId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ email ;", "}", "METHOD_END"], "methodName": ["getEmail"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ deliveryId ;", "}", "METHOD_END"], "methodName": ["getPrimaryKey"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ sms ;", "}", "METHOD_END"], "methodName": ["getSms"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ type ;", "}", "METHOD_END"], "methodName": ["getType"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ userId ;", "}", "METHOD_END"], "methodName": ["getUserId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ website ;", "}", "METHOD_END"], "methodName": ["getWebsite"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ email ;", "}", "METHOD_END"], "methodName": ["isEmail"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ sms ;", "}", "METHOD_END"], "methodName": ["isSms"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ website ;", "}", "METHOD_END"], "methodName": ["isWebsite"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "_ companyId    =    companyId ;", "}", "METHOD_END"], "methodName": ["setCompanyId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "_ deliveryId    =    deliveryId ;", "}", "METHOD_END"], "methodName": ["setDeliveryId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "_ email    =    email ;", "}", "METHOD_END"], "methodName": ["setEmail"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "setDeliveryId ( pk )  ;", "}", "METHOD_END"], "methodName": ["setPrimaryKey"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "_ sms    =    sms ;", "}", "METHOD_END"], "methodName": ["setSms"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "_ type    =    type ;", "}", "METHOD_END"], "methodName": ["setType"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "_ userId    =    userId ;", "}", "METHOD_END"], "methodName": ["setUserId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "_ website    =    website ;", "}", "METHOD_END"], "methodName": ["setWebsite"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliverySoap   soapModel    =    new   AnnouncementsDeliverySoap (  )  ;", "soapModel . setDeliveryId ( model . getDeliveryId (  )  )  ;", "soapModel . setCompanyId ( model . getCompanyId (  )  )  ;", "soapModel . setUserId ( model . getUserId (  )  )  ;", "soapModel . setType ( model . getType (  )  )  ;", "soapModel . setEmail ( model . getEmail (  )  )  ;", "soapModel . setSms ( model . getSms (  )  )  ;", "soapModel . setWebsite ( model . getWebsite (  )  )  ;", "return   soapModel ;", "}", "METHOD_END"], "methodName": ["toSoapModel"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliverySoap [  ]    soapModels    =    new   AnnouncementsDeliverySoap [ models . length ]  ;", "for    ( int   i    =     0  ;    i    <     ( models . length )  ;    i +  +  )     {", "soapModels [ i ]     =    AnnouncementsDeliverySoap . toSoapModel ( models [ i ]  )  ;", "}", "return   soapModels ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliverySoap [  ]  [  ]    soapModels    =    null ;", "if    (  ( models . length )     >     0  )     {", "soapModels    =    new   AnnouncementsDeliverySoap [ models . length ]  [ models [  0  ]  . length ]  ;", "} else    {", "soapModels    =    new   AnnouncementsDeliverySoap [  0  ]  [  0  ]  ;", "}", "for    ( int   i    =     0  ;    i    <     ( models . length )  ;    i +  +  )     {", "soapModels [ i ]     =    AnnouncementsDeliverySoap . toSoapModels ( models [ i ]  )  ;", "}", "return   soapModels ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "List < AnnouncementsDeliverySoap >    soapModels    =    new   ArrayList < AnnouncementsDeliverySoap >  ( models . size (  )  )  ;", "for    ( AnnouncementsDelivery   model    :    models )     {", "soapModels . add ( AnnouncementsDeliverySoap . toSoapModel ( model )  )  ;", "}", "return   soapModels . toArray ( new   AnnouncementsDeliverySoap [ soapModels . size (  )  ]  )  ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsDeliverySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ alert ;", "}", "METHOD_END"], "methodName": ["getAlert"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ classNameId ;", "}", "METHOD_END"], "methodName": ["getClassNameId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ classPK ;", "}", "METHOD_END"], "methodName": ["getClassPK"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ companyId ;", "}", "METHOD_END"], "methodName": ["getCompanyId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ content ;", "}", "METHOD_END"], "methodName": ["getContent"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ createDate ;", "}", "METHOD_END"], "methodName": ["getCreateDate"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ displayDate ;", "}", "METHOD_END"], "methodName": ["getDisplayDate"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ entryId ;", "}", "METHOD_END"], "methodName": ["getEntryId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ expirationDate ;", "}", "METHOD_END"], "methodName": ["getExpirationDate"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ modifiedDate ;", "}", "METHOD_END"], "methodName": ["getModifiedDate"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ entryId ;", "}", "METHOD_END"], "methodName": ["getPrimaryKey"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ priority ;", "}", "METHOD_END"], "methodName": ["getPriority"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ title ;", "}", "METHOD_END"], "methodName": ["getTitle"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ type ;", "}", "METHOD_END"], "methodName": ["getType"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ url ;", "}", "METHOD_END"], "methodName": ["getUrl"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ userId ;", "}", "METHOD_END"], "methodName": ["getUserId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ userName ;", "}", "METHOD_END"], "methodName": ["getUserName"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ uuid ;", "}", "METHOD_END"], "methodName": ["getUuid"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ alert ;", "}", "METHOD_END"], "methodName": ["isAlert"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ alert    =    alert ;", "}", "METHOD_END"], "methodName": ["setAlert"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ classNameId    =    classNameId ;", "}", "METHOD_END"], "methodName": ["setClassNameId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ classPK    =    classPK ;", "}", "METHOD_END"], "methodName": ["setClassPK"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ companyId    =    companyId ;", "}", "METHOD_END"], "methodName": ["setCompanyId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ content    =    content ;", "}", "METHOD_END"], "methodName": ["setContent"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ createDate    =    createDate ;", "}", "METHOD_END"], "methodName": ["setCreateDate"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ displayDate    =    displayDate ;", "}", "METHOD_END"], "methodName": ["setDisplayDate"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ entryId    =    entryId ;", "}", "METHOD_END"], "methodName": ["setEntryId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ expirationDate    =    expirationDate ;", "}", "METHOD_END"], "methodName": ["setExpirationDate"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ modifiedDate    =    modifiedDate ;", "}", "METHOD_END"], "methodName": ["setModifiedDate"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "setEntryId ( pk )  ;", "}", "METHOD_END"], "methodName": ["setPrimaryKey"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ priority    =    priority ;", "}", "METHOD_END"], "methodName": ["setPriority"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ title    =    title ;", "}", "METHOD_END"], "methodName": ["setTitle"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ type    =    type ;", "}", "METHOD_END"], "methodName": ["setType"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ url    =    url ;", "}", "METHOD_END"], "methodName": ["setUrl"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ userId    =    userId ;", "}", "METHOD_END"], "methodName": ["setUserId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ userName    =    userName ;", "}", "METHOD_END"], "methodName": ["setUserName"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ uuid    =    uuid ;", "}", "METHOD_END"], "methodName": ["setUuid"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntrySoap   soapModel    =    new   AnnouncementsEntrySoap (  )  ;", "soapModel . setUuid ( model . getUuid (  )  )  ;", "soapModel . setEntryId ( model . getEntryId (  )  )  ;", "soapModel . setCompanyId ( model . getCompanyId (  )  )  ;", "soapModel . setUserId ( model . getUserId (  )  )  ;", "soapModel . setUserName ( model . getUserName (  )  )  ;", "soapModel . setCreateDate ( model . getCreateDate (  )  )  ;", "soapModel . setModifiedDate ( model . getModifiedDate (  )  )  ;", "soapModel . setClassNameId ( model . getClassNameId (  )  )  ;", "soapModel . setClassPK ( model . getClassPK (  )  )  ;", "soapModel . setTitle ( model . getTitle (  )  )  ;", "soapModel . setContent ( model . getContent (  )  )  ;", "soapModel . setUrl ( model . getUrl (  )  )  ;", "soapModel . setType ( model . getType (  )  )  ;", "soapModel . setDisplayDate ( model . getDisplayDate (  )  )  ;", "soapModel . setExpirationDate ( model . getExpirationDate (  )  )  ;", "soapModel . setPriority ( model . getPriority (  )  )  ;", "soapModel . setAlert ( model . getAlert (  )  )  ;", "return   soapModel ;", "}", "METHOD_END"], "methodName": ["toSoapModel"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntrySoap [  ]    soapModels    =    new   AnnouncementsEntrySoap [ models . length ]  ;", "for    ( int   i    =     0  ;    i    <     ( models . length )  ;    i +  +  )     {", "soapModels [ i ]     =    AnnouncementsEntrySoap . toSoapModel ( models [ i ]  )  ;", "}", "return   soapModels ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntrySoap [  ]  [  ]    soapModels    =    null ;", "if    (  ( models . length )     >     0  )     {", "soapModels    =    new   AnnouncementsEntrySoap [ models . length ]  [ models [  0  ]  . length ]  ;", "} else    {", "soapModels    =    new   AnnouncementsEntrySoap [  0  ]  [  0  ]  ;", "}", "for    ( int   i    =     0  ;    i    <     ( models . length )  ;    i +  +  )     {", "soapModels [ i ]     =    AnnouncementsEntrySoap . toSoapModels ( models [ i ]  )  ;", "}", "return   soapModels ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "List < AnnouncementsEntrySoap >    soapModels    =    new   ArrayList < AnnouncementsEntrySoap >  ( models . size (  )  )  ;", "for    ( AnnouncementsEntry   model    :    models )     {", "soapModels . add ( AnnouncementsEntrySoap . toSoapModel ( model )  )  ;", "}", "return   soapModels . toArray ( new   AnnouncementsEntrySoap [ soapModels . size (  )  ]  )  ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ companyId ;", "}", "METHOD_END"], "methodName": ["getCompanyId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ createDate ;", "}", "METHOD_END"], "methodName": ["getCreateDate"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ entryId ;", "}", "METHOD_END"], "methodName": ["getEntryId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ flagId ;", "}", "METHOD_END"], "methodName": ["getFlagId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ flagId ;", "}", "METHOD_END"], "methodName": ["getPrimaryKey"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ userId ;", "}", "METHOD_END"], "methodName": ["getUserId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ value ;", "}", "METHOD_END"], "methodName": ["getValue"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "_ companyId    =    companyId ;", "}", "METHOD_END"], "methodName": ["setCompanyId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "_ createDate    =    createDate ;", "}", "METHOD_END"], "methodName": ["setCreateDate"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "_ entryId    =    entryId ;", "}", "METHOD_END"], "methodName": ["setEntryId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "_ flagId    =    flagId ;", "}", "METHOD_END"], "methodName": ["setFlagId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "setFlagId ( pk )  ;", "}", "METHOD_END"], "methodName": ["setPrimaryKey"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "_ userId    =    userId ;", "}", "METHOD_END"], "methodName": ["setUserId"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "_ value    =    value ;", "}", "METHOD_END"], "methodName": ["setValue"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagSoap   soapModel    =    new   AnnouncementsFlagSoap (  )  ;", "soapModel . setFlagId ( model . getFlagId (  )  )  ;", "soapModel . setCompanyId ( model . getCompanyId (  )  )  ;", "soapModel . setUserId ( model . getUserId (  )  )  ;", "soapModel . setCreateDate ( model . getCreateDate (  )  )  ;", "soapModel . setEntryId ( model . getEntryId (  )  )  ;", "soapModel . setValue ( model . getValue (  )  )  ;", "return   soapModel ;", "}", "METHOD_END"], "methodName": ["toSoapModel"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagSoap [  ]    soapModels    =    new   AnnouncementsFlagSoap [ models . length ]  ;", "for    ( int   i    =     0  ;    i    <     ( models . length )  ;    i +  +  )     {", "soapModels [ i ]     =    AnnouncementsFlagSoap . toSoapModel ( models [ i ]  )  ;", "}", "return   soapModels ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagSoap [  ]  [  ]    soapModels    =    null ;", "if    (  ( models . length )     >     0  )     {", "soapModels    =    new   AnnouncementsFlagSoap [ models . length ]  [ models [  0  ]  . length ]  ;", "} else    {", "soapModels    =    new   AnnouncementsFlagSoap [  0  ]  [  0  ]  ;", "}", "for    ( int   i    =     0  ;    i    <     ( models . length )  ;    i +  +  )     {", "soapModels [ i ]     =    AnnouncementsFlagSoap . toSoapModels ( models [ i ]  )  ;", "}", "return   soapModels ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "List < AnnouncementsFlagSoap >    soapModels    =    new   ArrayList < AnnouncementsFlagSoap >  ( models . size (  )  )  ;", "for    ( AnnouncementsFlag   model    :    models )     {", "soapModels . add ( AnnouncementsFlagSoap . toSoapModel ( model )  )  ;", "}", "return   soapModels . toArray ( new   AnnouncementsFlagSoap [ soapModels . size (  )  ]  )  ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.announcements.kernel.model.AnnouncementsFlagSoap"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . addAnnouncementsDelivery ( announcementsDelivery )  ;", "}", "METHOD_END"], "methodName": ["addAnnouncementsDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . addUserDelivery ( userId ,    type )  ;", "}", "METHOD_END"], "methodName": ["addUserDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . createAnnouncementsDelivery ( deliveryId )  ;", "}", "METHOD_END"], "methodName": ["createAnnouncementsDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . deleteAnnouncementsDelivery ( announcementsDelivery )  ;", "}", "METHOD_END"], "methodName": ["deleteAnnouncementsDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . deleteAnnouncementsDelivery ( deliveryId )  ;", "}", "METHOD_END"], "methodName": ["deleteAnnouncementsDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliveryLocalServiceUtil . getService (  )  . deleteDeliveries ( userId )  ;", "}", "METHOD_END"], "methodName": ["deleteDeliveries"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliveryLocalServiceUtil . getService (  )  . deleteDelivery ( delivery )  ;", "}", "METHOD_END"], "methodName": ["deleteDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliveryLocalServiceUtil . getService (  )  . deleteDelivery ( deliveryId )  ;", "}", "METHOD_END"], "methodName": ["deleteDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliveryLocalServiceUtil . getService (  )  . deleteDelivery ( userId ,    type )  ;", "}", "METHOD_END"], "methodName": ["deleteDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . deletePersistedModel ( persistedModel )  ;", "}", "METHOD_END"], "methodName": ["deletePersistedModel"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . dynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . dynamicQueryCount ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["dynamicQueryCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . dynamicQueryCount ( dynamicQuery ,    projection )  ;", "}", "METHOD_END"], "methodName": ["dynamicQueryCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . fetchAnnouncementsDelivery ( deliveryId )  ;", "}", "METHOD_END"], "methodName": ["fetchAnnouncementsDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . getActionableDynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["getActionableDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . getAnnouncementsDeliveries ( start ,    end )  ;", "}", "METHOD_END"], "methodName": ["getAnnouncementsDeliveries"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . getAnnouncementsDeliveriesCount (  )  ;", "}", "METHOD_END"], "methodName": ["getAnnouncementsDeliveriesCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . getAnnouncementsDelivery ( deliveryId )  ;", "}", "METHOD_END"], "methodName": ["getAnnouncementsDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . getDelivery ( deliveryId )  ;", "}", "METHOD_END"], "methodName": ["getDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . getIndexableActionableDynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["getIndexableActionableDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . getOSGiServiceIdentifier (  )  ;", "}", "METHOD_END"], "methodName": ["getOSGiServiceIdentifier"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . getPersistedModel ( primaryKeyObj )  ;", "}", "METHOD_END"], "methodName": ["getPersistedModel"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( AnnouncementsDeliveryLocalServiceUtil .  _ service )     =  =    null )     {", "AnnouncementsDeliveryLocalServiceUtil .  _ service    =     (  ( AnnouncementsDeliveryLocalService )     ( PortalBeanLocatorUtil . locate ( AnnouncementsDeliveryLocalService . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( AnnouncementsDeliveryLocalServiceUtil . class ,     \"  _ service \"  )  ;", "}", "return   AnnouncementsDeliveryLocalServiceUtil .  _ service ;", "}", "METHOD_END"], "methodName": ["getService"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . getUserDeliveries ( userId )  ;", "}", "METHOD_END"], "methodName": ["getUserDeliveries"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . getUserDelivery ( userId ,    type )  ;", "}", "METHOD_END"], "methodName": ["getUserDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . updateAnnouncementsDelivery ( announcementsDelivery )  ;", "}", "METHOD_END"], "methodName": ["updateAnnouncementsDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . updateDelivery ( userId ,    type ,    email ,    sms )  ;", "}", "METHOD_END"], "methodName": ["updateDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryLocalServiceUtil . getService (  )  . updateDelivery ( userId ,    type ,    email ,    sms ,    website )  ;", "}", "METHOD_END"], "methodName": ["updateDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryServiceUtil . getService (  )  . getOSGiServiceIdentifier (  )  ;", "}", "METHOD_END"], "methodName": ["getOSGiServiceIdentifier"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( AnnouncementsDeliveryServiceUtil .  _ service )     =  =    null )     {", "AnnouncementsDeliveryServiceUtil .  _ service    =     (  ( AnnouncementsDeliveryService )     ( PortalBeanLocatorUtil . locate ( AnnouncementsDeliveryService . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( AnnouncementsDeliveryServiceUtil . class ,     \"  _ service \"  )  ;", "}", "return   AnnouncementsDeliveryServiceUtil .  _ service ;", "}", "METHOD_END"], "methodName": ["getService"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryServiceUtil . getService (  )  . updateDelivery ( userId ,    type ,    email ,    sms )  ;", "}", "METHOD_END"], "methodName": ["updateDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryServiceUtil . getService (  )  . updateDelivery ( userId ,    type ,    email ,    sms ,    website )  ;", "}", "METHOD_END"], "methodName": ["updateDelivery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsDeliveryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . addAnnouncementsEntry ( announcementsEntry )  ;", "}", "METHOD_END"], "methodName": ["addAnnouncementsEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . addEntry ( userId ,    classNameId ,    classPK ,    title ,    content ,    url ,    type ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    displayImmediately ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    priority ,    alert )  ;", "}", "METHOD_END"], "methodName": ["addEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . addEntry ( userId ,    classNameId ,    classPK ,    title ,    content ,    url ,    type ,    displayDate ,    expirationDate ,    priority ,    alert )  ;", "}", "METHOD_END"], "methodName": ["addEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryLocalServiceUtil . getService (  )  . checkEntries (  )  ;", "}", "METHOD_END"], "methodName": ["checkEntries"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . createAnnouncementsEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["createAnnouncementsEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . deleteAnnouncementsEntry ( announcementsEntry )  ;", "}", "METHOD_END"], "methodName": ["deleteAnnouncementsEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . deleteAnnouncementsEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["deleteAnnouncementsEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryLocalServiceUtil . getService (  )  . deleteEntries ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["deleteEntries"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryLocalServiceUtil . getService (  )  . deleteEntry ( entry )  ;", "}", "METHOD_END"], "methodName": ["deleteEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryLocalServiceUtil . getService (  )  . deleteEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["deleteEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . deletePersistedModel ( persistedModel )  ;", "}", "METHOD_END"], "methodName": ["deletePersistedModel"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . dynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . dynamicQueryCount ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["dynamicQueryCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . dynamicQueryCount ( dynamicQuery ,    projection )  ;", "}", "METHOD_END"], "methodName": ["dynamicQueryCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . fetchAnnouncementsEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["fetchAnnouncementsEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . fetchAnnouncementsEntryByUuidAndCompanyId ( uuid ,    companyId )  ;", "}", "METHOD_END"], "methodName": ["fetchAnnouncementsEntryByUuidAndCompanyId"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getActionableDynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["getActionableDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getAnnouncementsEntries ( start ,    end )  ;", "}", "METHOD_END"], "methodName": ["getAnnouncementsEntries"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getAnnouncementsEntriesCount (  )  ;", "}", "METHOD_END"], "methodName": ["getAnnouncementsEntriesCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getAnnouncementsEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["getAnnouncementsEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getAnnouncementsEntryByUuidAndCompanyId ( uuid ,    companyId )  ;", "}", "METHOD_END"], "methodName": ["getAnnouncementsEntryByUuidAndCompanyId"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getEntries ( userId ,    scopes ,    alert ,    flagValue ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getEntries ( userId ,    scopes ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    alert ,    flagValue ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getEntries ( classNameId ,    classPK ,    alert ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getEntries ( userId ,    classNameId ,    classPKs ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    alert ,    flagValue ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getEntriesCount ( userId ,    scopes ,    alert ,    flagValue )  ;", "}", "METHOD_END"], "methodName": ["getEntriesCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getEntriesCount ( userId ,    scopes ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    alert ,    flagValue )  ;", "}", "METHOD_END"], "methodName": ["getEntriesCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getEntriesCount ( classNameId ,    classPK ,    alert )  ;", "}", "METHOD_END"], "methodName": ["getEntriesCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getEntriesCount ( userId ,    classNameId ,    classPKs ,    alert ,    flagValue )  ;", "}", "METHOD_END"], "methodName": ["getEntriesCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getEntriesCount ( userId ,    classNameId ,    classPKs ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    alert ,    flagValue )  ;", "}", "METHOD_END"], "methodName": ["getEntriesCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["getEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getExportActionableDynamicQuery ( portletDataContext )  ;", "}", "METHOD_END"], "methodName": ["getExportActionableDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getIndexableActionableDynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["getIndexableActionableDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getOSGiServiceIdentifier (  )  ;", "}", "METHOD_END"], "methodName": ["getOSGiServiceIdentifier"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getPersistedModel ( primaryKeyObj )  ;", "}", "METHOD_END"], "methodName": ["getPersistedModel"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( AnnouncementsEntryLocalServiceUtil .  _ service )     =  =    null )     {", "AnnouncementsEntryLocalServiceUtil .  _ service    =     (  ( AnnouncementsEntryLocalService )     ( PortalBeanLocatorUtil . locate ( AnnouncementsEntryLocalService . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( AnnouncementsEntryLocalServiceUtil . class ,     \"  _ service \"  )  ;", "}", "return   AnnouncementsEntryLocalServiceUtil .  _ service ;", "}", "METHOD_END"], "methodName": ["getService"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getUserEntries ( userId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["getUserEntries"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . getUserEntriesCount ( userId )  ;", "}", "METHOD_END"], "methodName": ["getUserEntriesCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . updateAnnouncementsEntry ( announcementsEntry )  ;", "}", "METHOD_END"], "methodName": ["updateAnnouncementsEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . updateEntry ( entryId ,    title ,    content ,    url ,    type ,    displayDate ,    expirationDate ,    priority )  ;", "}", "METHOD_END"], "methodName": ["updateEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryLocalServiceUtil . getService (  )  . updateEntry ( userId ,    entryId ,    title ,    content ,    url ,    type ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    displayImmediately ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    priority )  ;", "}", "METHOD_END"], "methodName": ["updateEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryServiceUtil . getService (  )  . addEntry ( classNameId ,    classPK ,    title ,    content ,    url ,    type ,    displayDate ,    expirationDate ,    priority ,    alert )  ;", "}", "METHOD_END"], "methodName": ["addEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryServiceUtil . getService (  )  . addEntry ( plid ,    classNameId ,    classPK ,    title ,    content ,    url ,    type ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    displayImmediately ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    priority ,    alert )  ;", "}", "METHOD_END"], "methodName": ["addEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryServiceUtil . getService (  )  . deleteEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["deleteEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryServiceUtil . getService (  )  . getEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["getEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryServiceUtil . getService (  )  . getOSGiServiceIdentifier (  )  ;", "}", "METHOD_END"], "methodName": ["getOSGiServiceIdentifier"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( AnnouncementsEntryServiceUtil .  _ service )     =  =    null )     {", "AnnouncementsEntryServiceUtil .  _ service    =     (  ( AnnouncementsEntryService )     ( PortalBeanLocatorUtil . locate ( AnnouncementsEntryService . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( AnnouncementsEntryServiceUtil . class ,     \"  _ service \"  )  ;", "}", "return   AnnouncementsEntryServiceUtil .  _ service ;", "}", "METHOD_END"], "methodName": ["getService"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryServiceUtil . getService (  )  . updateEntry ( entryId ,    title ,    content ,    url ,    type ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    displayImmediately ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    priority )  ;", "}", "METHOD_END"], "methodName": ["updateEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryServiceUtil . getService (  )  . updateEntry ( entryId ,    title ,    content ,    url ,    type ,    displayDate ,    expirationDate ,    priority )  ;", "}", "METHOD_END"], "methodName": ["updateEntry"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . addAnnouncementsFlag ( announcementsFlag )  ;", "}", "METHOD_END"], "methodName": ["addAnnouncementsFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . addFlag ( userId ,    entryId ,    value )  ;", "}", "METHOD_END"], "methodName": ["addFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . createAnnouncementsFlag ( flagId )  ;", "}", "METHOD_END"], "methodName": ["createAnnouncementsFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . deleteAnnouncementsFlag ( announcementsFlag )  ;", "}", "METHOD_END"], "methodName": ["deleteAnnouncementsFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . deleteAnnouncementsFlag ( flagId )  ;", "}", "METHOD_END"], "methodName": ["deleteAnnouncementsFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagLocalServiceUtil . getService (  )  . deleteFlag ( flag )  ;", "}", "METHOD_END"], "methodName": ["deleteFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagLocalServiceUtil . getService (  )  . deleteFlag ( flagId )  ;", "}", "METHOD_END"], "methodName": ["deleteFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagLocalServiceUtil . getService (  )  . deleteFlags ( entryId )  ;", "}", "METHOD_END"], "methodName": ["deleteFlags"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . deletePersistedModel ( persistedModel )  ;", "}", "METHOD_END"], "methodName": ["deletePersistedModel"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . dynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . dynamicQueryCount ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["dynamicQueryCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . dynamicQueryCount ( dynamicQuery ,    projection )  ;", "}", "METHOD_END"], "methodName": ["dynamicQueryCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . fetchAnnouncementsFlag ( flagId )  ;", "}", "METHOD_END"], "methodName": ["fetchAnnouncementsFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . getActionableDynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["getActionableDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . getAnnouncementsFlag ( flagId )  ;", "}", "METHOD_END"], "methodName": ["getAnnouncementsFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . getAnnouncementsFlags ( start ,    end )  ;", "}", "METHOD_END"], "methodName": ["getAnnouncementsFlags"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . getAnnouncementsFlagsCount (  )  ;", "}", "METHOD_END"], "methodName": ["getAnnouncementsFlagsCount"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . getFlag ( userId ,    entryId ,    value )  ;", "}", "METHOD_END"], "methodName": ["getFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . getIndexableActionableDynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["getIndexableActionableDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . getOSGiServiceIdentifier (  )  ;", "}", "METHOD_END"], "methodName": ["getOSGiServiceIdentifier"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . getPersistedModel ( primaryKeyObj )  ;", "}", "METHOD_END"], "methodName": ["getPersistedModel"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( AnnouncementsFlagLocalServiceUtil .  _ service )     =  =    null )     {", "AnnouncementsFlagLocalServiceUtil .  _ service    =     (  ( AnnouncementsFlagLocalService )     ( PortalBeanLocatorUtil . locate ( AnnouncementsFlagLocalService . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( AnnouncementsFlagLocalServiceUtil . class ,     \"  _ service \"  )  ;", "}", "return   AnnouncementsFlagLocalServiceUtil .  _ service ;", "}", "METHOD_END"], "methodName": ["getService"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagLocalServiceUtil . getService (  )  . updateAnnouncementsFlag ( announcementsFlag )  ;", "}", "METHOD_END"], "methodName": ["updateAnnouncementsFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagServiceUtil . getService (  )  . addFlag ( entryId ,    value )  ;", "}", "METHOD_END"], "methodName": ["addFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagServiceUtil . getService (  )  . deleteFlag ( flagId )  ;", "}", "METHOD_END"], "methodName": ["deleteFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagServiceUtil . getService (  )  . getFlag ( entryId ,    value )  ;", "}", "METHOD_END"], "methodName": ["getFlag"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagServiceUtil . getService (  )  . getOSGiServiceIdentifier (  )  ;", "}", "METHOD_END"], "methodName": ["getOSGiServiceIdentifier"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagServiceUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( AnnouncementsFlagServiceUtil .  _ service )     =  =    null )     {", "AnnouncementsFlagServiceUtil .  _ service    =     (  ( AnnouncementsFlagService )     ( PortalBeanLocatorUtil . locate ( AnnouncementsFlagService . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( AnnouncementsFlagServiceUtil . class ,     \"  _ service \"  )  ;", "}", "return   AnnouncementsFlagServiceUtil .  _ service ;", "}", "METHOD_END"], "methodName": ["getService"], "fileName": "com.liferay.announcements.kernel.service.AnnouncementsFlagServiceUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliveryUtil . getPersistence (  )  . cacheResult ( announcementsDelivery )  ;", "}", "METHOD_END"], "methodName": ["cacheResult"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliveryUtil . getPersistence (  )  . cacheResult ( announcementsDeliveries )  ;", "}", "METHOD_END"], "methodName": ["cacheResult"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliveryUtil . getPersistence (  )  . clearCache (  )  ;", "}", "METHOD_END"], "methodName": ["clearCache"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliveryUtil . getPersistence (  )  . clearCache ( announcementsDelivery )  ;", "}", "METHOD_END"], "methodName": ["clearCache"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . countAll (  )  ;", "}", "METHOD_END"], "methodName": ["countAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . countByU _ T ( userId ,    type )  ;", "}", "METHOD_END"], "methodName": ["countByU_T"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . countByUserId ( userId )  ;", "}", "METHOD_END"], "methodName": ["countByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . countWithDynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["countWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . create ( deliveryId )  ;", "}", "METHOD_END"], "methodName": ["create"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . fetchByPrimaryKey ( deliveryId )  ;", "}", "METHOD_END"], "methodName": ["fetchByPrimaryKey"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . fetchByPrimaryKeys ( primaryKeys )  ;", "}", "METHOD_END"], "methodName": ["fetchByPrimaryKeys"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . fetchByU _ T ( userId ,    type )  ;", "}", "METHOD_END"], "methodName": ["fetchByU_T"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . fetchByU _ T ( userId ,    type ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["fetchByU_T"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . fetchByUserId _ First ( userId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByUserId_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . fetchByUserId _ Last ( userId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByUserId_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findAll (  )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findAll ( start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findAll ( start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findAll ( start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findByPrimaryKey ( deliveryId )  ;", "}", "METHOD_END"], "methodName": ["findByPrimaryKey"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findByU _ T ( userId ,    type )  ;", "}", "METHOD_END"], "methodName": ["findByU_T"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findByUserId ( userId )  ;", "}", "METHOD_END"], "methodName": ["findByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findByUserId ( userId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findByUserId ( userId ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findByUserId ( userId ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findByUserId _ First ( userId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUserId_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findByUserId _ Last ( userId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUserId_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findByUserId _ PrevAndNext ( deliveryId ,    userId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUserId_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . getBadColumnNames (  )  ;", "}", "METHOD_END"], "methodName": ["getBadColumnNames"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( AnnouncementsDeliveryUtil .  _ persistence )     =  =    null )     {", "AnnouncementsDeliveryUtil .  _ persistence    =     (  ( AnnouncementsDeliveryPersistence )     ( PortalBeanLocatorUtil . locate ( AnnouncementsDeliveryPersistence . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( AnnouncementsDeliveryUtil . class ,     \"  _ persistence \"  )  ;", "}", "return   AnnouncementsDeliveryUtil .  _ persistence ;", "}", "METHOD_END"], "methodName": ["getPersistence"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . remove ( deliveryId )  ;", "}", "METHOD_END"], "methodName": ["remove"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliveryUtil . getPersistence (  )  . removeAll (  )  ;", "}", "METHOD_END"], "methodName": ["removeAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . removeByU _ T ( userId ,    type )  ;", "}", "METHOD_END"], "methodName": ["removeByU_T"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsDeliveryUtil . getPersistence (  )  . removeByUserId ( userId )  ;", "}", "METHOD_END"], "methodName": ["removeByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . update ( announcementsDelivery )  ;", "}", "METHOD_END"], "methodName": ["update"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . update ( announcementsDelivery ,    serviceContext )  ;", "}", "METHOD_END"], "methodName": ["update"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsDeliveryUtil . getPersistence (  )  . updateImpl ( announcementsDelivery )  ;", "}", "METHOD_END"], "methodName": ["updateImpl"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsDeliveryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryFinderUtil . getFinder (  )  . countByScope ( userId ,    classNameId ,    classPKs ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    alert ,    flagValue )  ;", "}", "METHOD_END"], "methodName": ["countByScope"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryFinderUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryFinderUtil . getFinder (  )  . countByScopes ( userId ,    scopes ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    alert ,    flagValue )  ;", "}", "METHOD_END"], "methodName": ["countByScopes"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryFinderUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryFinderUtil . getFinder (  )  . findByDisplayDate ( displayDateLT ,    displayDateGT )  ;", "}", "METHOD_END"], "methodName": ["findByDisplayDate"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryFinderUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryFinderUtil . getFinder (  )  . findByScope ( userId ,    classNameId ,    classPKs ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    alert ,    flagValue ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByScope"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryFinderUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryFinderUtil . getFinder (  )  . findByScopes ( userId ,    scopes ,    displayDateMonth ,    displayDateDay ,    displayDateYear ,    displayDateHour ,    displayDateMinute ,    expirationDateMonth ,    expirationDateDay ,    expirationDateYear ,    expirationDateHour ,    expirationDateMinute ,    alert ,    flagValue ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByScopes"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryFinderUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( AnnouncementsEntryFinderUtil .  _ finder )     =  =    null )     {", "AnnouncementsEntryFinderUtil .  _ finder    =     (  ( AnnouncementsEntryFinder )     ( PortalBeanLocatorUtil . locate ( AnnouncementsEntryFinder . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( AnnouncementsEntryFinderUtil . class ,     \"  _ finder \"  )  ;", "}", "return   AnnouncementsEntryFinderUtil .  _ finder ;", "}", "METHOD_END"], "methodName": ["getFinder"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryFinderUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryFinderUtil .  _ finder    =    finder ;", "ReferenceRegistry . registerReference ( AnnouncementsEntryFinderUtil . class ,     \"  _ finder \"  )  ;", "}", "METHOD_END"], "methodName": ["setFinder"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryFinderUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryUtil . getPersistence (  )  . cacheResult ( announcementsEntry )  ;", "}", "METHOD_END"], "methodName": ["cacheResult"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryUtil . getPersistence (  )  . cacheResult ( announcementsEntries )  ;", "}", "METHOD_END"], "methodName": ["cacheResult"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryUtil . getPersistence (  )  . clearCache (  )  ;", "}", "METHOD_END"], "methodName": ["clearCache"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryUtil . getPersistence (  )  . clearCache ( announcementsEntry )  ;", "}", "METHOD_END"], "methodName": ["clearCache"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . countAll (  )  ;", "}", "METHOD_END"], "methodName": ["countAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . countByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["countByC_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . countByC _ C _ A ( classNameId ,    classPK ,    alert )  ;", "}", "METHOD_END"], "methodName": ["countByC_C_A"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . countByUserId ( userId )  ;", "}", "METHOD_END"], "methodName": ["countByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . countByUuid ( uuid )  ;", "}", "METHOD_END"], "methodName": ["countByUuid"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . countByUuid _ C ( uuid ,    companyId )  ;", "}", "METHOD_END"], "methodName": ["countByUuid_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . countWithDynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["countWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . create ( entryId )  ;", "}", "METHOD_END"], "methodName": ["create"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByC _ C _ A _ First ( classNameId ,    classPK ,    alert ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByC_C_A_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByC _ C _ A _ Last ( classNameId ,    classPK ,    alert ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByC_C_A_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByC _ C _ First ( classNameId ,    classPK ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByC_C_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByC _ C _ Last ( classNameId ,    classPK ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByC_C_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByPrimaryKey ( entryId )  ;", "}", "METHOD_END"], "methodName": ["fetchByPrimaryKey"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByPrimaryKeys ( primaryKeys )  ;", "}", "METHOD_END"], "methodName": ["fetchByPrimaryKeys"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByUserId _ First ( userId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByUserId_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByUserId _ Last ( userId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByUserId_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByUuid _ C _ First ( uuid ,    companyId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByUuid_C_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByUuid _ C _ Last ( uuid ,    companyId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByUuid_C_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByUuid _ First ( uuid ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByUuid_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . fetchByUuid _ Last ( uuid ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByUuid_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterCountByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["filterCountByC_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterCountByC _ C _ A ( classNameId ,    classPK ,    alert )  ;", "}", "METHOD_END"], "methodName": ["filterCountByC_C_A"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterCountByUserId ( userId )  ;", "}", "METHOD_END"], "methodName": ["filterCountByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterCountByUuid ( uuid )  ;", "}", "METHOD_END"], "methodName": ["filterCountByUuid"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterCountByUuid _ C ( uuid ,    companyId )  ;", "}", "METHOD_END"], "methodName": ["filterCountByUuid_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["filterFindByC_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByC _ C ( classNameId ,    classPK ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["filterFindByC_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByC _ C ( classNameId ,    classPK ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["filterFindByC_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByC _ C _ A ( classNameId ,    classPK ,    alert )  ;", "}", "METHOD_END"], "methodName": ["filterFindByC_C_A"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByC _ C _ A ( classNameId ,    classPK ,    alert ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["filterFindByC_C_A"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByC _ C _ A ( classNameId ,    classPK ,    alert ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["filterFindByC_C_A"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByC _ C _ A _ PrevAndNext ( entryId ,    classNameId ,    classPK ,    alert ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["filterFindByC_C_A_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByC _ C _ PrevAndNext ( entryId ,    classNameId ,    classPK ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["filterFindByC_C_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUserId ( userId )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUserId ( userId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUserId ( userId ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUserId _ PrevAndNext ( entryId ,    userId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUserId_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUuid ( uuid )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUuid"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUuid ( uuid ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUuid"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUuid ( uuid ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUuid"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUuid _ C ( uuid ,    companyId )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUuid_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUuid _ C ( uuid ,    companyId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUuid_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUuid _ C ( uuid ,    companyId ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUuid_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUuid _ C _ PrevAndNext ( entryId ,    uuid ,    companyId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUuid_C_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . filterFindByUuid _ PrevAndNext ( entryId ,    uuid ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["filterFindByUuid_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findAll (  )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findAll ( start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findAll ( start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findAll ( start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["findByC_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C ( classNameId ,    classPK ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByC_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C ( classNameId ,    classPK ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByC_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C ( classNameId ,    classPK ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByC_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C _ A ( classNameId ,    classPK ,    alert )  ;", "}", "METHOD_END"], "methodName": ["findByC_C_A"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C _ A ( classNameId ,    classPK ,    alert ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByC_C_A"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C _ A ( classNameId ,    classPK ,    alert ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByC_C_A"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C _ A ( classNameId ,    classPK ,    alert ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByC_C_A"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C _ A _ First ( classNameId ,    classPK ,    alert ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByC_C_A_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C _ A _ Last ( classNameId ,    classPK ,    alert ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByC_C_A_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C _ A _ PrevAndNext ( entryId ,    classNameId ,    classPK ,    alert ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByC_C_A_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C _ First ( classNameId ,    classPK ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByC_C_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C _ Last ( classNameId ,    classPK ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByC_C_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByC _ C _ PrevAndNext ( entryId ,    classNameId ,    classPK ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByC_C_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByPrimaryKey ( entryId )  ;", "}", "METHOD_END"], "methodName": ["findByPrimaryKey"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUserId ( userId )  ;", "}", "METHOD_END"], "methodName": ["findByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUserId ( userId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUserId ( userId ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUserId ( userId ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUserId _ First ( userId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUserId_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUserId _ Last ( userId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUserId_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUserId _ PrevAndNext ( entryId ,    userId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUserId_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid ( uuid )  ;", "}", "METHOD_END"], "methodName": ["findByUuid"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid ( uuid ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByUuid"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid ( uuid ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUuid"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid ( uuid ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByUuid"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid _ C ( uuid ,    companyId )  ;", "}", "METHOD_END"], "methodName": ["findByUuid_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid _ C ( uuid ,    companyId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByUuid_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid _ C ( uuid ,    companyId ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUuid_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid _ C ( uuid ,    companyId ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByUuid_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid _ C _ First ( uuid ,    companyId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUuid_C_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid _ C _ Last ( uuid ,    companyId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUuid_C_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid _ C _ PrevAndNext ( entryId ,    uuid ,    companyId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUuid_C_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid _ First ( uuid ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUuid_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid _ Last ( uuid ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUuid_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findByUuid _ PrevAndNext ( entryId ,    uuid ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByUuid_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . getBadColumnNames (  )  ;", "}", "METHOD_END"], "methodName": ["getBadColumnNames"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( AnnouncementsEntryUtil .  _ persistence )     =  =    null )     {", "AnnouncementsEntryUtil .  _ persistence    =     (  ( AnnouncementsEntryPersistence )     ( PortalBeanLocatorUtil . locate ( AnnouncementsEntryPersistence . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( AnnouncementsEntryUtil . class ,     \"  _ persistence \"  )  ;", "}", "return   AnnouncementsEntryUtil .  _ persistence ;", "}", "METHOD_END"], "methodName": ["getPersistence"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . remove ( entryId )  ;", "}", "METHOD_END"], "methodName": ["remove"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryUtil . getPersistence (  )  . removeAll (  )  ;", "}", "METHOD_END"], "methodName": ["removeAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryUtil . getPersistence (  )  . removeByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["removeByC_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryUtil . getPersistence (  )  . removeByC _ C _ A ( classNameId ,    classPK ,    alert )  ;", "}", "METHOD_END"], "methodName": ["removeByC_C_A"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryUtil . getPersistence (  )  . removeByUserId ( userId )  ;", "}", "METHOD_END"], "methodName": ["removeByUserId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryUtil . getPersistence (  )  . removeByUuid ( uuid )  ;", "}", "METHOD_END"], "methodName": ["removeByUuid"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsEntryUtil . getPersistence (  )  . removeByUuid _ C ( uuid ,    companyId )  ;", "}", "METHOD_END"], "methodName": ["removeByUuid_C"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . update ( announcementsEntry )  ;", "}", "METHOD_END"], "methodName": ["update"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . update ( announcementsEntry ,    serviceContext )  ;", "}", "METHOD_END"], "methodName": ["update"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsEntryUtil . getPersistence (  )  . updateImpl ( announcementsEntry )  ;", "}", "METHOD_END"], "methodName": ["updateImpl"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsEntryUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagUtil . getPersistence (  )  . cacheResult ( announcementsFlag )  ;", "}", "METHOD_END"], "methodName": ["cacheResult"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagUtil . getPersistence (  )  . cacheResult ( announcementsFlags )  ;", "}", "METHOD_END"], "methodName": ["cacheResult"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagUtil . getPersistence (  )  . clearCache (  )  ;", "}", "METHOD_END"], "methodName": ["clearCache"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagUtil . getPersistence (  )  . clearCache ( announcementsFlag )  ;", "}", "METHOD_END"], "methodName": ["clearCache"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . countAll (  )  ;", "}", "METHOD_END"], "methodName": ["countAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . countByEntryId ( entryId )  ;", "}", "METHOD_END"], "methodName": ["countByEntryId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . countByU _ E _ V ( userId ,    entryId ,    value )  ;", "}", "METHOD_END"], "methodName": ["countByU_E_V"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . countWithDynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["countWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . create ( flagId )  ;", "}", "METHOD_END"], "methodName": ["create"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . fetchByEntryId _ First ( entryId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByEntryId_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . fetchByEntryId _ Last ( entryId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByEntryId_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . fetchByPrimaryKey ( flagId )  ;", "}", "METHOD_END"], "methodName": ["fetchByPrimaryKey"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . fetchByPrimaryKeys ( primaryKeys )  ;", "}", "METHOD_END"], "methodName": ["fetchByPrimaryKeys"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . fetchByU _ E _ V ( userId ,    entryId ,    value )  ;", "}", "METHOD_END"], "methodName": ["fetchByU_E_V"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . fetchByU _ E _ V ( userId ,    entryId ,    value ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["fetchByU_E_V"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findAll (  )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findAll ( start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findAll ( start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findAll ( start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findByEntryId ( entryId )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findByEntryId ( entryId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findByEntryId ( entryId ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findByEntryId ( entryId ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findByEntryId _ First ( entryId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId_First"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findByEntryId _ Last ( entryId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId_Last"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findByEntryId _ PrevAndNext ( flagId ,    entryId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId_PrevAndNext"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findByPrimaryKey ( flagId )  ;", "}", "METHOD_END"], "methodName": ["findByPrimaryKey"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findByU _ E _ V ( userId ,    entryId ,    value )  ;", "}", "METHOD_END"], "methodName": ["findByU_E_V"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( AnnouncementsFlagUtil .  _ persistence )     =  =    null )     {", "AnnouncementsFlagUtil .  _ persistence    =     (  ( AnnouncementsFlagPersistence )     ( PortalBeanLocatorUtil . locate ( AnnouncementsFlagPersistence . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( AnnouncementsFlagUtil . class ,     \"  _ persistence \"  )  ;", "}", "return   AnnouncementsFlagUtil .  _ persistence ;", "}", "METHOD_END"], "methodName": ["getPersistence"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . remove ( flagId )  ;", "}", "METHOD_END"], "methodName": ["remove"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagUtil . getPersistence (  )  . removeAll (  )  ;", "}", "METHOD_END"], "methodName": ["removeAll"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "AnnouncementsFlagUtil . getPersistence (  )  . removeByEntryId ( entryId )  ;", "}", "METHOD_END"], "methodName": ["removeByEntryId"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . removeByU _ E _ V ( userId ,    entryId ,    value )  ;", "}", "METHOD_END"], "methodName": ["removeByU_E_V"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . update ( announcementsFlag )  ;", "}", "METHOD_END"], "methodName": ["update"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . update ( announcementsFlag ,    serviceContext )  ;", "}", "METHOD_END"], "methodName": ["update"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsFlagUtil . getPersistence (  )  . updateImpl ( announcementsFlag )  ;", "}", "METHOD_END"], "methodName": ["updateImpl"], "fileName": "com.liferay.announcements.kernel.service.persistence.AnnouncementsFlagUtil"}, {"methodBody": ["METHOD_START", "{", "long   userId    =    user . getUserId (  )  ;", "LinkedHashMap < Long ,    long [  ]  >    scopes    =    new   LinkedHashMap <  >  (  )  ;", "scopes . put ( Long . valueOf (  0  )  ,    new   long [  ]  {     0     }  )  ;", "scopes . put (  .  _ USER _ CLASS _ NAME _ ID ,    new   long [  ]  {    userId    }  )  ;", "UserBag   userBag    =    UserBagFactoryUtil . create ( userId )  ;", "long [  ]    organizationIds    =    userBag . getUserOrgIds (  )  ;", "if    (  ( length )     >     0  )     {", "scopes . put (  .  _ ORGANIZATION _ CLASS _ NAME _ ID ,    organizationIds )  ;", "}", "long [  ]    groupIds    =    userBag . getUserGroupIds (  )  ;", "if    (  ( groupIds . length )     >     0  )     {", "scopes . put (  .  _ GROUP _ CLASS _ NAME _ ID ,    groupIds )  ;", "}", "List < UserGroup >    userGroups    =    UserGroupLocalServiceUtil . getUserUserGroups ( userId )  ;", "if    (  !  ( userGroups . isEmpty (  )  )  )     {", "long [  ]    userGroupIds    =    ListUtil . toLongArray ( userGroups ,    USER _ GROUP _ ID _ ACCESSOR )  ;", "scopes . put (  .  _ USER _ GROUP _ CLASS _ NAME _ ID ,    userGroupIds )  ;", "}", "Set < Long >    roleIds    =    SetUtil . fromArray ( userBag . getRoleIds (  )  )  ;", "if    (  (  ( groupIds . length )     >     0  )     |  |     (  ( length )     >     0  )  )     {", "List < UserGroupRole >    userGroupRoles    =    UserGroupRoleLocalServiceUtil . getUserGroupRoles ( userId )  ;", "for    ( UserGroupRole   userGroupRole    :    userGroupRoles )     {", "roleIds . add ( userGroupRole . getRoleId (  )  )  ;", "}", "}", "if    (  !  ( userGroups . isEmpty (  )  )  )     {", "List < UserGroupGroupRole >    userGroupGroupRoles    =    UserGroupGroupRoleLocalServiceUtil . getUserGroupGroupRolesByUser ( userId )  ;", "for    ( UserGroupGroupRole   userGroupGroupRole    :    userGroupGroupRoles )     {", "roleIds . add ( userGroupGroupRole . getRoleId (  )  )  ;", "}", "}", "List < Team >    teams    =    TeamLocalServiceUtil . getUserTeams ( userId )  ;", "long [  ]    teamIds    =    ListUtil . toLongArray ( teams ,    TEAM _ ID _ ACCESSOR )  ;", "long   companyId    =    user . getCompanyId (  )  ;", "if    (  ( teamIds . length )     >     0  )     {", "List < Role >    teamsRoles    =    RoleLocalServiceUtil . getTeamsRoles ( companyId ,    teamIds )  ;", "for    ( Role   teamRole    :    teamsRoles )     {", "roleIds . add ( teamRole . getRoleId (  )  )  ;", "}", "}", "if    (  .  _ PERMISSIONS _ CHECK _ GUEST _ ENABLED )     {", "Role   guestRole    =    RoleLocalServiceUtil . getRole ( companyId ,    GUEST )  ;", "roleIds . add ( guestRole . getRoleId (  )  )  ;", "}", "if    (  !  ( roleIds . isEmpty (  )  )  )     {", "scopes . put (  .  _ ROLE _ CLASS _ NAME _ ID ,    ArrayUtil . toLongArray ( roleIds )  )  ;", "}", "return   scopes ;", "}", "METHOD_END"], "methodName": ["getAnnouncementScopes"], "fileName": "com.liferay.announcements.kernel.util.AnnouncementsUtil"}, {"methodBody": ["METHOD_START", "{", "return   AnnouncementsUtil . getAnnouncementScopes ( UserLocalServiceUtil . getUserById ( userId )  )  ;", "}", "METHOD_END"], "methodName": ["getAnnouncementScopes"], "fileName": "com.liferay.announcements.kernel.util.AnnouncementsUtil"}, {"methodBody": ["METHOD_START", "{", "List < Group >    filteredGroups    =    new   ArrayList <  >  (  )  ;", "List < Group >    groups    =    GroupLocalServiceUgetUserGroups ( themeDisplay . getUserId (  )  ,    true )  ;", "for    ( Group   group    :    groups )     {", "if    (  (  (  ( group . isOrganization (  )  )     &  &     ( group . isSite (  )  )  )     |  |     ( group . isRegularSite (  )  )  )     &  &     ( GroupPermissionUcontains ( themeDisplay . getPermissionChecker (  )  ,    group . getGroupId (  )  ,    MANAGE _ ANNOUNCEMENTS )  )  )     {", "filteredGroups . add ( group )  ;", "}", "}", "return   filteredGroups ;", "}", "METHOD_END"], "methodName": ["getGroups"], "fileName": "com.liferay.announcements.kernel.util.AnnouncementsUtil"}, {"methodBody": ["METHOD_START", "{", "List < Organization >    filteredOrganizations    =    new   ArrayList <  >  (  )  ;", "List < Organization >    organizations    =    OrganizationLocalServiceUgetUserOrganizations ( themeDisplay . getUserId (  )  )  ;", "for    ( Organization   organization    :    organizations )     {", "if    ( OrganizationPermissionUcontains ( themeDisplay . getPermissionChecker (  )  ,    getOrganizationId (  )  ,    MANAGE _ ANNOUNCEMENTS )  )     {", "filteredOrganizations . add ( organization )  ;", "}", "}", "return   filteredOrganizations ;", "}", "METHOD_END"], "methodName": ["getOrganizations"], "fileName": "com.liferay.announcements.kernel.util.AnnouncementsUtil"}, {"methodBody": ["METHOD_START", "{", "List < Role >    filteredRoles    =    new   ArrayList <  >  (  )  ;", "List < Role >    roles    =    RoleLocalServiceUgetRoles ( themeDisplay . getCompanyId (  )  )  ;", "for    ( Role   role    :    roles )     {", "if    ( role . isTeam (  )  )     {", "Team   team    =    TeamLocalServiceUgetTeam ( role . getClassPK (  )  )  ;", "if    (  ( GroupPermissionUcontains ( themeDisplay . getPermissionChecker (  )  ,    team . getGroupId (  )  ,    MANAGE _ ANNOUNCEMENTS )  )     |  |     ( RolePermissionUcontains ( themeDisplay . getPermissionChecker (  )  ,    themeDisplay . getScopeGroupId (  )  ,    role . getRoleId (  )  ,    MANAGE _ ANNOUNCEMENTS )  )  )     {", "filteredRoles . add ( role )  ;", "}", "} else", "if    ( RolePermissionUcontains ( themeDisplay . getPermissionChecker (  )  ,    role . getRoleId (  )  ,    MANAGE _ ANNOUNCEMENTS )  )     {", "filteredRoles . add ( role )  ;", "}", "}", "return   filteredRoles ;", "}", "METHOD_END"], "methodName": ["getRoles"], "fileName": "com.liferay.announcements.kernel.util.AnnouncementsUtil"}, {"methodBody": ["METHOD_START", "{", "List < UserGroup >    filteredUserGroups    =    new   ArrayList <  >  (  )  ;", "List < UserGroup >    userGroups    =    UserGroupLocalServiceUgetUserGroups ( themeDisplay . getCompanyId (  )  )  ;", "for    ( UserGroup   userGroup    :    userGroups )     {", "if    ( UserGroupPermissionUcontains ( themeDisplay . getPermissionChecker (  )  ,    userGroup . getUserGroupId (  )  ,    MANAGE _ ANNOUNCEMENTS )  )     {", "filteredUserGroups . add ( userGroup )  ;", "}", "}", "return   filteredUserGroups ;", "}", "METHOD_END"], "methodName": ["getUserGroups"], "fileName": "com.liferay.announcements.kernel.util.AnnouncementsUtil"}]