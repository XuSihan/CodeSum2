[{"methodBody": ["METHOD_START", "{", "return    _ duplicateEntryId ;", "}", "METHOD_END"], "methodName": ["getDuplicateEntryId"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "return    _ errorMessage ;", "}", "METHOD_END"], "methodName": ["getErrorMessage"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "return    _ oldName ;", "}", "METHOD_END"], "methodName": ["getOldName"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "return    _ trashEntryId ;", "}", "METHOD_END"], "methodName": ["getTrashEntryId"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "return    _ type ;", "}", "METHOD_END"], "methodName": ["getType"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "return    _ overridable ;", "}", "METHOD_END"], "methodName": ["isOverridable"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "_ duplicateEntryId    =    duplicateEntryId ;", "}", "METHOD_END"], "methodName": ["setDuplicateEntryId"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "_ errorMessage    =    errorMessage ;", "}", "METHOD_END"], "methodName": ["setErrorMessage"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "_ oldName    =    oldName ;", "}", "METHOD_END"], "methodName": ["setOldName"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "_ overridable    =    overridable ;", "}", "METHOD_END"], "methodName": ["setOverridable"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "_ trashEntryId    =    trashEntryId ;", "}", "METHOD_END"], "methodName": ["setTrashEntryId"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "_ type    =    type ;", "}", "METHOD_END"], "methodName": ["setType"], "fileName": "com.liferay.trash.kernel.exception.RestoreEntryException"}, {"methodBody": ["METHOD_START", "{", "return    _ array ;", "}", "METHOD_END"], "methodName": ["getArray"], "fileName": "com.liferay.trash.kernel.model.TrashEntryList"}, {"methodBody": ["METHOD_START", "{", "return    _ count ;", "}", "METHOD_END"], "methodName": ["getCount"], "fileName": "com.liferay.trash.kernel.model.TrashEntryList"}, {"methodBody": ["METHOD_START", "{", "return    _ approximate ;", "}", "METHOD_END"], "methodName": ["isApproximate"], "fileName": "com.liferay.trash.kernel.model.TrashEntryList"}, {"methodBody": ["METHOD_START", "{", "_ approximate    =    approximate ;", "}", "METHOD_END"], "methodName": ["setApproximate"], "fileName": "com.liferay.trash.kernel.model.TrashEntryList"}, {"methodBody": ["METHOD_START", "{", "_ array    =    array ;", "}", "METHOD_END"], "methodName": ["setArray"], "fileName": "com.liferay.trash.kernel.model.TrashEntryList"}, {"methodBody": ["METHOD_START", "{", "_ count    =    count ;", "}", "METHOD_END"], "methodName": ["setCount"], "fileName": "com.liferay.trash.kernel.model.TrashEntryList"}, {"methodBody": ["METHOD_START", "{", "return    _ classNameId ;", "}", "METHOD_END"], "methodName": ["getClassNameId"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ classPK ;", "}", "METHOD_END"], "methodName": ["getClassPK"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ companyId ;", "}", "METHOD_END"], "methodName": ["getCompanyId"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ createDate ;", "}", "METHOD_END"], "methodName": ["getCreateDate"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ entryId ;", "}", "METHOD_END"], "methodName": ["getEntryId"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ groupId ;", "}", "METHOD_END"], "methodName": ["getGroupId"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ entryId ;", "}", "METHOD_END"], "methodName": ["getPrimaryKey"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ status ;", "}", "METHOD_END"], "methodName": ["getStatus"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ systemEventSetKey ;", "}", "METHOD_END"], "methodName": ["getSystemEventSetKey"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ typeSettings ;", "}", "METHOD_END"], "methodName": ["getTypeSettings"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ userId ;", "}", "METHOD_END"], "methodName": ["getUserId"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ userName ;", "}", "METHOD_END"], "methodName": ["getUserName"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ classNameId    =    classNameId ;", "}", "METHOD_END"], "methodName": ["setClassNameId"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ classPK    =    classPK ;", "}", "METHOD_END"], "methodName": ["setClassPK"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ companyId    =    companyId ;", "}", "METHOD_END"], "methodName": ["setCompanyId"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ createDate    =    createDate ;", "}", "METHOD_END"], "methodName": ["setCreateDate"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ entryId    =    entryId ;", "}", "METHOD_END"], "methodName": ["setEntryId"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ groupId    =    groupId ;", "}", "METHOD_END"], "methodName": ["setGroupId"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "setEntryId ( pk )  ;", "}", "METHOD_END"], "methodName": ["setPrimaryKey"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ status    =    status ;", "}", "METHOD_END"], "methodName": ["setStatus"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ systemEventSetKey    =    systemEventSetKey ;", "}", "METHOD_END"], "methodName": ["setSystemEventSetKey"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ typeSettings    =    typeSettings ;", "}", "METHOD_END"], "methodName": ["setTypeSettings"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ userId    =    userId ;", "}", "METHOD_END"], "methodName": ["setUserId"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "_ userName    =    userName ;", "}", "METHOD_END"], "methodName": ["setUserName"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "TrashEntrySoap   soapModel    =    new   TrashEntrySoap (  )  ;", "soapModel . setEntryId ( model . getEntryId (  )  )  ;", "soapModel . setGroupId ( model . getGroupId (  )  )  ;", "soapModel . setCompanyId ( model . getCompanyId (  )  )  ;", "soapModel . setUserId ( model . getUserId (  )  )  ;", "soapModel . setUserName ( model . getUserName (  )  )  ;", "soapModel . setCreateDate ( model . getCreateDate (  )  )  ;", "soapModel . setClassNameId ( model . getClassNameId (  )  )  ;", "soapModel . setClassPK ( model . getClassPK (  )  )  ;", "soapModel . setSystemEventSetKey ( model . getSystemEventSetKey (  )  )  ;", "soapModel . setTypeSettings ( model . getTypeSettings (  )  )  ;", "soapModel . setStatus ( model . getStatus (  )  )  ;", "return   soapModel ;", "}", "METHOD_END"], "methodName": ["toSoapModel"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "TrashEntrySoap [  ]    soapModels    =    new   TrashEntrySoap [ models . length ]  ;", "for    ( int   i    =     0  ;    i    <     ( models . length )  ;    i +  +  )     {", "soapModels [ i ]     =    TrashEntrySoap . toSoapModel ( models [ i ]  )  ;", "}", "return   soapModels ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "TrashEntrySoap [  ]  [  ]    soapModels    =    null ;", "if    (  ( models . length )     >     0  )     {", "soapModels    =    new   TrashEntrySoap [ models . length ]  [ models [  0  ]  . length ]  ;", "} else    {", "soapModels    =    new   TrashEntrySoap [  0  ]  [  0  ]  ;", "}", "for    ( int   i    =     0  ;    i    <     ( models . length )  ;    i +  +  )     {", "soapModels [ i ]     =    TrashEntrySoap . toSoapModels ( models [ i ]  )  ;", "}", "return   soapModels ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "List < TrashEntrySoap >    soapModels    =    new   ArrayList < TrashEntrySoap >  ( models . size (  )  )  ;", "for    ( TrashEntry   model    :    models )     {", "soapModels . add ( TrashEntrySoap . toSoapModel ( model )  )  ;", "}", "return   soapModels . toArray ( new   TrashEntrySoap [ soapModels . size (  )  ]  )  ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.trash.kernel.model.TrashEntrySoap"}, {"methodBody": ["METHOD_START", "{", "return    _ classNameId ;", "}", "METHOD_END"], "methodName": ["getClassNameId"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ classPK ;", "}", "METHOD_END"], "methodName": ["getClassPK"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ companyId ;", "}", "METHOD_END"], "methodName": ["getCompanyId"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ entryId ;", "}", "METHOD_END"], "methodName": ["getEntryId"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ versionId ;", "}", "METHOD_END"], "methodName": ["getPrimaryKey"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ status ;", "}", "METHOD_END"], "methodName": ["getStatus"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ typeSettings ;", "}", "METHOD_END"], "methodName": ["getTypeSettings"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "return    _ versionId ;", "}", "METHOD_END"], "methodName": ["getVersionId"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "_ classNameId    =    classNameId ;", "}", "METHOD_END"], "methodName": ["setClassNameId"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "_ classPK    =    classPK ;", "}", "METHOD_END"], "methodName": ["setClassPK"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "_ companyId    =    companyId ;", "}", "METHOD_END"], "methodName": ["setCompanyId"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "_ entryId    =    entryId ;", "}", "METHOD_END"], "methodName": ["setEntryId"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "setVersionId ( pk )  ;", "}", "METHOD_END"], "methodName": ["setPrimaryKey"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "_ status    =    status ;", "}", "METHOD_END"], "methodName": ["setStatus"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "_ typeSettings    =    typeSettings ;", "}", "METHOD_END"], "methodName": ["setTypeSettings"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "_ versionId    =    versionId ;", "}", "METHOD_END"], "methodName": ["setVersionId"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "TrashVersionSoap   soapModel    =    new   TrashVersionSoap (  )  ;", "soapModel . setVersionId ( model . getVersionId (  )  )  ;", "soapModel . setCompanyId ( model . getCompanyId (  )  )  ;", "soapModel . setEntryId ( model . getEntryId (  )  )  ;", "soapModel . setClassNameId ( model . getClassNameId (  )  )  ;", "soapModel . setClassPK ( model . getClassPK (  )  )  ;", "soapModel . setTypeSettings ( model . getTypeSettings (  )  )  ;", "soapModel . setStatus ( model . getStatus (  )  )  ;", "return   soapModel ;", "}", "METHOD_END"], "methodName": ["toSoapModel"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "TrashVersionSoap [  ]    soapModels    =    new   TrashVersionSoap [ models . length ]  ;", "for    ( int   i    =     0  ;    i    <     ( models . length )  ;    i +  +  )     {", "soapModels [ i ]     =    TrashVersionSoap . toSoapModel ( models [ i ]  )  ;", "}", "return   soapModels ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "TrashVersionSoap [  ]  [  ]    soapModels    =    null ;", "if    (  ( models . length )     >     0  )     {", "soapModels    =    new   TrashVersionSoap [ models . length ]  [ models [  0  ]  . length ]  ;", "} else    {", "soapModels    =    new   TrashVersionSoap [  0  ]  [  0  ]  ;", "}", "for    ( int   i    =     0  ;    i    <     ( models . length )  ;    i +  +  )     {", "soapModels [ i ]     =    TrashVersionSoap . toSoapModels ( models [ i ]  )  ;", "}", "return   soapModels ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "List < TrashVersionSoap >    soapModels    =    new   ArrayList < TrashVersionSoap >  ( models . size (  )  )  ;", "for    ( TrashVersion   model    :    models )     {", "soapModels . add ( TrashVersionSoap . toSoapModel ( model )  )  ;", "}", "return   soapModels . toArray ( new   TrashVersionSoap [ soapModels . size (  )  ]  )  ;", "}", "METHOD_END"], "methodName": ["toSoapModels"], "fileName": "com.liferay.trash.kernel.model.TrashVersionSoap"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . addTrashEntry ( trashEntry )  ;", "}", "METHOD_END"], "methodName": ["addTrashEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . addTrashEntry ( userId ,    groupId ,    className ,    classPK ,    classUuid ,    referrerClassName ,    status ,    statusOVPs ,    typeSettingsProperties )  ;", "}", "METHOD_END"], "methodName": ["addTrashEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryLocalServiceUtil . getService (  )  . checkEntries (  )  ;", "}", "METHOD_END"], "methodName": ["checkEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . createTrashEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["createTrashEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryLocalServiceUtil . getService (  )  . deleteEntries ( groupId )  ;", "}", "METHOD_END"], "methodName": ["deleteEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryLocalServiceUtil . getService (  )  . deleteEntries ( groupId ,    deleteTrashedModels )  ;", "}", "METHOD_END"], "methodName": ["deleteEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . deleteEntry ( trashEntry )  ;", "}", "METHOD_END"], "methodName": ["deleteEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . deleteEntry ( className ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["deleteEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . deleteEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["deleteEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . deletePersistedModel ( persistedModel )  ;", "}", "METHOD_END"], "methodName": ["deletePersistedModel"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . deleteTrashEntry ( trashEntry )  ;", "}", "METHOD_END"], "methodName": ["deleteTrashEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . deleteTrashEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["deleteTrashEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . dynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . dynamicQueryCount ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["dynamicQueryCount"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . dynamicQueryCount ( dynamicQuery ,    projection )  ;", "}", "METHOD_END"], "methodName": ["dynamicQueryCount"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . fetchEntry ( className ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["fetchEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . fetchEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["fetchEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . fetchTrashEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["fetchTrashEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getActionableDynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["getActionableDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getEntries ( groupId )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getEntries ( groupId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getEntries ( groupId ,    start ,    end ,    obc )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getEntries ( groupId ,    className )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getEntriesCount ( groupId )  ;", "}", "METHOD_END"], "methodName": ["getEntriesCount"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getEntry ( className ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["getEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["getEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getIndexableActionableDynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["getIndexableActionableDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getOSGiServiceIdentifier (  )  ;", "}", "METHOD_END"], "methodName": ["getOSGiServiceIdentifier"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getPersistedModel ( primaryKeyObj )  ;", "}", "METHOD_END"], "methodName": ["getPersistedModel"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( TrashEntryLocalServiceUtil .  _ service )     =  =    null )     {", "TrashEntryLocalServiceUtil .  _ service    =     (  ( TrashEntryLocalService )     ( PortalBeanLocatorUtil . locate ( TrashEntryLocalService . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( TrashEntryLocalServiceUtil . class ,     \"  _ service \"  )  ;", "}", "return   TrashEntryLocalServiceUtil .  _ service ;", "}", "METHOD_END"], "methodName": ["getService"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getTrashEntries ( start ,    end )  ;", "}", "METHOD_END"], "methodName": ["getTrashEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getTrashEntriesCount (  )  ;", "}", "METHOD_END"], "methodName": ["getTrashEntriesCount"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . getTrashEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["getTrashEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . search ( companyId ,    groupId ,    userId ,    keywords ,    start ,    end ,    sort )  ;", "}", "METHOD_END"], "methodName": ["search"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . searchTrashEntries ( companyId ,    groupId ,    userId ,    keywords ,    start ,    end ,    sort )  ;", "}", "METHOD_END"], "methodName": ["searchTrashEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryLocalServiceUtil . getService (  )  . updateTrashEntry ( trashEntry )  ;", "}", "METHOD_END"], "methodName": ["updateTrashEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryServiceUtil . getService (  )  . deleteEntries ( groupId )  ;", "}", "METHOD_END"], "methodName": ["deleteEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryServiceUtil . getService (  )  . deleteEntries ( entryIds )  ;", "}", "METHOD_END"], "methodName": ["deleteEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryServiceUtil . getService (  )  . deleteEntry ( className ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["deleteEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryServiceUtil . getService (  )  . deleteEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["deleteEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryServiceUtil . getService (  )  . getEntries ( groupId )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryServiceUtil . getService (  )  . getEntries ( groupId ,    start ,    end ,    obc )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryServiceUtil . getService (  )  . getEntries ( groupId ,    className )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryServiceUtil . getService (  )  . getEntries ( groupId ,    className ,    start ,    end ,    obc )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryServiceUtil . getService (  )  . getOSGiServiceIdentifier (  )  ;", "}", "METHOD_END"], "methodName": ["getOSGiServiceIdentifier"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( TrashEntryServiceUtil .  _ service )     =  =    null )     {", "TrashEntryServiceUtil .  _ service    =     (  ( TrashEntryService )     ( PortalBeanLocatorUtil . locate ( TrashEntryService . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( TrashEntryServiceUtil . class ,     \"  _ service \"  )  ;", "}", "return   TrashEntryServiceUtil .  _ service ;", "}", "METHOD_END"], "methodName": ["getService"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryServiceUtil . getService (  )  . moveEntry ( className ,    classPK ,    destinationContainerModelId ,    serviceContext )  ;", "}", "METHOD_END"], "methodName": ["moveEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryServiceUtil . getService (  )  . restoreEntry ( className ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["restoreEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryServiceUtil . getService (  )  . restoreEntry ( className ,    classPK ,    overrideClassPK ,    name )  ;", "}", "METHOD_END"], "methodName": ["restoreEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryServiceUtil . getService (  )  . restoreEntry ( entryId )  ;", "}", "METHOD_END"], "methodName": ["restoreEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryServiceUtil . getService (  )  . restoreEntry ( entryId ,    overrideClassPK ,    name )  ;", "}", "METHOD_END"], "methodName": ["restoreEntry"], "fileName": "com.liferay.trash.kernel.service.TrashEntryServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . addTrashVersion ( trashVersion )  ;", "}", "METHOD_END"], "methodName": ["addTrashVersion"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . addTrashVersion ( trashEntryId ,    className ,    classPK ,    status ,    typeSettingsProperties )  ;", "}", "METHOD_END"], "methodName": ["addTrashVersion"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . createTrashVersion ( versionId )  ;", "}", "METHOD_END"], "methodName": ["createTrashVersion"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . deletePersistedModel ( persistedModel )  ;", "}", "METHOD_END"], "methodName": ["deletePersistedModel"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . deleteTrashVersion ( trashVersion )  ;", "}", "METHOD_END"], "methodName": ["deleteTrashVersion"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . deleteTrashVersion ( className ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["deleteTrashVersion"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . deleteTrashVersion ( versionId )  ;", "}", "METHOD_END"], "methodName": ["deleteTrashVersion"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . dynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . dynamicQuery ( dynamicQuery ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["dynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . dynamicQueryCount ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["dynamicQueryCount"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . dynamicQueryCount ( dynamicQuery ,    projection )  ;", "}", "METHOD_END"], "methodName": ["dynamicQueryCount"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . fetchTrashVersion ( versionId )  ;", "}", "METHOD_END"], "methodName": ["fetchTrashVersion"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . fetchVersion ( className ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["fetchVersion"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . fetchVersion ( entryId ,    className ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["fetchVersion"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . getActionableDynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["getActionableDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . getIndexableActionableDynamicQuery (  )  ;", "}", "METHOD_END"], "methodName": ["getIndexableActionableDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . getOSGiServiceIdentifier (  )  ;", "}", "METHOD_END"], "methodName": ["getOSGiServiceIdentifier"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . getPersistedModel ( primaryKeyObj )  ;", "}", "METHOD_END"], "methodName": ["getPersistedModel"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( TrashVersionLocalServiceUtil .  _ service )     =  =    null )     {", "TrashVersionLocalServiceUtil .  _ service    =     (  ( TrashVersionLocalService )     ( PortalBeanLocatorUtil . locate ( TrashVersionLocalService . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( TrashVersionLocalServiceUtil . class ,     \"  _ service \"  )  ;", "}", "return   TrashVersionLocalServiceUtil .  _ service ;", "}", "METHOD_END"], "methodName": ["getService"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . getTrashVersion ( versionId )  ;", "}", "METHOD_END"], "methodName": ["getTrashVersion"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . getTrashVersions ( start ,    end )  ;", "}", "METHOD_END"], "methodName": ["getTrashVersions"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . getTrashVersionsCount (  )  ;", "}", "METHOD_END"], "methodName": ["getTrashVersionsCount"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . getVersions ( entryId )  ;", "}", "METHOD_END"], "methodName": ["getVersions"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . getVersions ( entryId ,    className )  ;", "}", "METHOD_END"], "methodName": ["getVersions"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionLocalServiceUtil . getService (  )  . updateTrashVersion ( trashVersion )  ;", "}", "METHOD_END"], "methodName": ["updateTrashVersion"], "fileName": "com.liferay.trash.kernel.service.TrashVersionLocalServiceUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryUtil . getPersistence (  )  . cacheResult ( trashEntry )  ;", "}", "METHOD_END"], "methodName": ["cacheResult"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryUtil . getPersistence (  )  . cacheResult ( trashEntries )  ;", "}", "METHOD_END"], "methodName": ["cacheResult"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryUtil . getPersistence (  )  . clearCache (  )  ;", "}", "METHOD_END"], "methodName": ["clearCache"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryUtil . getPersistence (  )  . clearCache ( trashEntry )  ;", "}", "METHOD_END"], "methodName": ["clearCache"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . countAll (  )  ;", "}", "METHOD_END"], "methodName": ["countAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . countByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["countByC_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . countByCompanyId ( companyId )  ;", "}", "METHOD_END"], "methodName": ["countByCompanyId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . countByG _ C ( groupId ,    classNameId )  ;", "}", "METHOD_END"], "methodName": ["countByG_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . countByG _ LtCD ( groupId ,    createDate )  ;", "}", "METHOD_END"], "methodName": ["countByG_LtCD"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . countByGroupId ( groupId )  ;", "}", "METHOD_END"], "methodName": ["countByGroupId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . countWithDynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["countWithDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . create ( entryId )  ;", "}", "METHOD_END"], "methodName": ["create"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["fetchByC_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByC _ C ( classNameId ,    classPK ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["fetchByC_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByCompanyId _ First ( companyId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByCompanyId_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByCompanyId _ Last ( companyId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByCompanyId_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByG _ C _ First ( groupId ,    classNameId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByG_C_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByG _ C _ Last ( groupId ,    classNameId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByG_C_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByG _ LtCD _ First ( groupId ,    createDate ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByG_LtCD_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByG _ LtCD _ Last ( groupId ,    createDate ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByG_LtCD_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByGroupId _ First ( groupId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByGroupId_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByGroupId _ Last ( groupId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByGroupId_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByPrimaryKey ( entryId )  ;", "}", "METHOD_END"], "methodName": ["fetchByPrimaryKey"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . fetchByPrimaryKeys ( primaryKeys )  ;", "}", "METHOD_END"], "methodName": ["fetchByPrimaryKeys"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findAll (  )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findAll ( start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findAll ( start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findAll ( start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["findByC_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByCompanyId ( companyId )  ;", "}", "METHOD_END"], "methodName": ["findByCompanyId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByCompanyId ( companyId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByCompanyId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByCompanyId ( companyId ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByCompanyId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByCompanyId ( companyId ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByCompanyId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByCompanyId _ First ( companyId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByCompanyId_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByCompanyId _ Last ( companyId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByCompanyId_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByCompanyId _ PrevAndNext ( entryId ,    companyId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByCompanyId_PrevAndNext"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ C ( groupId ,    classNameId )  ;", "}", "METHOD_END"], "methodName": ["findByG_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ C ( groupId ,    classNameId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByG_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ C ( groupId ,    classNameId ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByG_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ C ( groupId ,    classNameId ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByG_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ C _ First ( groupId ,    classNameId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByG_C_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ C _ Last ( groupId ,    classNameId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByG_C_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ C _ PrevAndNext ( entryId ,    groupId ,    classNameId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByG_C_PrevAndNext"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ LtCD ( groupId ,    createDate )  ;", "}", "METHOD_END"], "methodName": ["findByG_LtCD"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ LtCD ( groupId ,    createDate ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByG_LtCD"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ LtCD ( groupId ,    createDate ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByG_LtCD"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ LtCD ( groupId ,    createDate ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByG_LtCD"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ LtCD _ First ( groupId ,    createDate ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByG_LtCD_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ LtCD _ Last ( groupId ,    createDate ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByG_LtCD_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByG _ LtCD _ PrevAndNext ( entryId ,    groupId ,    createDate ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByG_LtCD_PrevAndNext"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByGroupId ( groupId )  ;", "}", "METHOD_END"], "methodName": ["findByGroupId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByGroupId ( groupId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByGroupId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByGroupId ( groupId ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByGroupId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByGroupId ( groupId ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByGroupId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByGroupId _ First ( groupId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByGroupId_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByGroupId _ Last ( groupId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByGroupId_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByGroupId _ PrevAndNext ( entryId ,    groupId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByGroupId_PrevAndNext"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findByPrimaryKey ( entryId )  ;", "}", "METHOD_END"], "methodName": ["findByPrimaryKey"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( TrashEntryUtil .  _ persistence )     =  =    null )     {", "TrashEntryUtil .  _ persistence    =     (  ( TrashEntryPersistence )     ( PortalBeanLocatorUtil . locate ( TrashEntryPersistence . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( TrashEntryUtil . class ,     \"  _ persistence \"  )  ;", "}", "return   TrashEntryUtil .  _ persistence ;", "}", "METHOD_END"], "methodName": ["getPersistence"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . remove ( entryId )  ;", "}", "METHOD_END"], "methodName": ["remove"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryUtil . getPersistence (  )  . removeAll (  )  ;", "}", "METHOD_END"], "methodName": ["removeAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . removeByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["removeByC_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryUtil . getPersistence (  )  . removeByCompanyId ( companyId )  ;", "}", "METHOD_END"], "methodName": ["removeByCompanyId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryUtil . getPersistence (  )  . removeByG _ C ( groupId ,    classNameId )  ;", "}", "METHOD_END"], "methodName": ["removeByG_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryUtil . getPersistence (  )  . removeByG _ LtCD ( groupId ,    createDate )  ;", "}", "METHOD_END"], "methodName": ["removeByG_LtCD"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "TrashEntryUtil . getPersistence (  )  . removeByGroupId ( groupId )  ;", "}", "METHOD_END"], "methodName": ["removeByGroupId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . update ( trashEntry )  ;", "}", "METHOD_END"], "methodName": ["update"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . update ( trashEntry ,    serviceContext )  ;", "}", "METHOD_END"], "methodName": ["update"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashEntryUtil . getPersistence (  )  . updateImpl ( trashEntry )  ;", "}", "METHOD_END"], "methodName": ["updateImpl"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashEntryUtil"}, {"methodBody": ["METHOD_START", "{", "TrashVersionUtil . getPersistence (  )  . cacheResult ( trashVersion )  ;", "}", "METHOD_END"], "methodName": ["cacheResult"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "TrashVersionUtil . getPersistence (  )  . cacheResult ( trashVersions )  ;", "}", "METHOD_END"], "methodName": ["cacheResult"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "TrashVersionUtil . getPersistence (  )  . clearCache (  )  ;", "}", "METHOD_END"], "methodName": ["clearCache"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "TrashVersionUtil . getPersistence (  )  . clearCache ( trashVersion )  ;", "}", "METHOD_END"], "methodName": ["clearCache"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . countAll (  )  ;", "}", "METHOD_END"], "methodName": ["countAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . countByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["countByC_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . countByE _ C ( entryId ,    classNameId )  ;", "}", "METHOD_END"], "methodName": ["countByE_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . countByEntryId ( entryId )  ;", "}", "METHOD_END"], "methodName": ["countByEntryId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . countWithDynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["countWithDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . create ( versionId )  ;", "}", "METHOD_END"], "methodName": ["create"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . fetchByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["fetchByC_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . fetchByC _ C ( classNameId ,    classPK ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["fetchByC_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . fetchByE _ C _ First ( entryId ,    classNameId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByE_C_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . fetchByE _ C _ Last ( entryId ,    classNameId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByE_C_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . fetchByEntryId _ First ( entryId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByEntryId_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . fetchByEntryId _ Last ( entryId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["fetchByEntryId_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . fetchByPrimaryKey ( versionId )  ;", "}", "METHOD_END"], "methodName": ["fetchByPrimaryKey"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . fetchByPrimaryKeys ( primaryKeys )  ;", "}", "METHOD_END"], "methodName": ["fetchByPrimaryKeys"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findAll (  )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findAll ( start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findAll ( start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findAll ( start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["findByC_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByE _ C ( entryId ,    classNameId )  ;", "}", "METHOD_END"], "methodName": ["findByE_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByE _ C ( entryId ,    classNameId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByE_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByE _ C ( entryId ,    classNameId ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByE_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByE _ C ( entryId ,    classNameId ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByE_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByE _ C _ First ( entryId ,    classNameId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByE_C_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByE _ C _ Last ( entryId ,    classNameId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByE_C_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByE _ C _ PrevAndNext ( versionId ,    entryId ,    classNameId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByE_C_PrevAndNext"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByEntryId ( entryId )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByEntryId ( entryId ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByEntryId ( entryId ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByEntryId ( entryId ,    start ,    end ,    orderByComparator ,    retrieveFromCache )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByEntryId _ First ( entryId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId_First"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByEntryId _ Last ( entryId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId_Last"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByEntryId _ PrevAndNext ( versionId ,    entryId ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findByEntryId_PrevAndNext"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findByPrimaryKey ( versionId )  ;", "}", "METHOD_END"], "methodName": ["findByPrimaryKey"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery ,    start ,    end )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . findWithDynamicQuery ( dynamicQuery ,    start ,    end ,    orderByComparator )  ;", "}", "METHOD_END"], "methodName": ["findWithDynamicQuery"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "if    (  ( TrashVersionUtil .  _ persistence )     =  =    null )     {", "TrashVersionUtil .  _ persistence    =     (  ( TrashVersionPersistence )     ( PortalBeanLocatorUtil . locate ( TrashVersionPersistence . class . getName (  )  )  )  )  ;", "ReferenceRegistry . registerReference ( TrashVersionUtil . class ,     \"  _ persistence \"  )  ;", "}", "return   TrashVersionUtil .  _ persistence ;", "}", "METHOD_END"], "methodName": ["getPersistence"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . remove ( versionId )  ;", "}", "METHOD_END"], "methodName": ["remove"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "TrashVersionUtil . getPersistence (  )  . removeAll (  )  ;", "}", "METHOD_END"], "methodName": ["removeAll"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . removeByC _ C ( classNameId ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["removeByC_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "TrashVersionUtil . getPersistence (  )  . removeByE _ C ( entryId ,    classNameId )  ;", "}", "METHOD_END"], "methodName": ["removeByE_C"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "TrashVersionUtil . getPersistence (  )  . removeByEntryId ( entryId )  ;", "}", "METHOD_END"], "methodName": ["removeByEntryId"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . update ( trashVersion )  ;", "}", "METHOD_END"], "methodName": ["update"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . update ( trashVersion ,    serviceContext )  ;", "}", "METHOD_END"], "methodName": ["update"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashVersionUtil . getPersistence (  )  . updateImpl ( trashVersion )  ;", "}", "METHOD_END"], "methodName": ["updateImpl"], "fileName": "com.liferay.trash.kernel.service.persistence.TrashVersionUtil"}, {"methodBody": ["METHOD_START", "{", "TrashUtil . getTrash (  )  . addBaseModelBreadcrumbEntries ( request ,    liferayPortletResponse ,    className ,    classPK ,    containerModelURL )  ;", "}", "METHOD_END"], "methodName": ["addBaseModelBreadcrumbEntries"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "TrashUtil . getTrash (  )  . addContainerModelBreadcrumbEntries ( request ,    liferayPortletResponse ,    className ,    classPK ,    containerModelURL )  ;", "}", "METHOD_END"], "methodName": ["addContainerModelBreadcrumbEntries"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "TrashUtil . getTrash (  )  . addTrashSessionMessages ( actionRequest ,    trashedModel )  ;", "}", "METHOD_END"], "methodName": ["addTrashSessionMessages"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "TrashUtil . getTrash (  )  . addTrashSessionMessages ( actionRequest ,    trashedModel ,    cmd )  ;", "}", "METHOD_END"], "methodName": ["addTrashSessionMessages"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "TrashUtil . getTrash (  )  . addTrashSessionMessages ( actionRequest ,    trashedModels )  ;", "}", "METHOD_END"], "methodName": ["addTrashSessionMessages"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "TrashUtil . getTrash (  )  . addTrashSessionMessages ( actionRequest ,    trashedModels ,    cmd )  ;", "}", "METHOD_END"], "methodName": ["addTrashSessionMessages"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "TrashUtil . getTrash (  )  . deleteEntriesAttachments ( companyId ,    repositoryId ,    date ,    attachmentFileNames )  ;", "}", "METHOD_END"], "methodName": ["deleteEntriesAttachments"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . disableTrash ( group )  ;", "}", "METHOD_END"], "methodName": ["disableTrash"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getEntries ( hits )  ;", "}", "METHOD_END"], "methodName": ["getEntries"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getEntryOrderByComparator ( orderByCol ,    orderByType )  ;", "}", "METHOD_END"], "methodName": ["getEntryOrderByComparator"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getMaxAge ( group )  ;", "}", "METHOD_END"], "methodName": ["getMaxAge"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getNewName ( themeDisplay ,    className ,    classPK ,    oldName )  ;", "}", "METHOD_END"], "methodName": ["getNewName"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getNewName ( oldName ,    token )  ;", "}", "METHOD_END"], "methodName": ["getNewName"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getOriginalTitle ( title )  ;", "}", "METHOD_END"], "methodName": ["getOriginalTitle"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getOriginalTitle ( title ,    paramName )  ;", "}", "METHOD_END"], "methodName": ["getOriginalTitle"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "PortalRuntimePermission . checkGetBeanProperty ( TrashUtil . class )  ;", "return   TrashUtil .  _ trash ;", "}", "METHOD_END"], "methodName": ["getTrash"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getTrashTime ( title ,    separator )  ;", "}", "METHOD_END"], "methodName": ["getTrashTime"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getTrashTitle ( trashEntryId )  ;", "}", "METHOD_END"], "methodName": ["getTrashTitle"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getViewContentURL ( request ,    className ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["getViewContentURL"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getViewContentURL ( request ,    trashEntryId )  ;", "}", "METHOD_END"], "methodName": ["getViewContentURL"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . getViewURL ( request )  ;", "}", "METHOD_END"], "methodName": ["getViewURL"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . isInTrash ( className ,    classPK )  ;", "}", "METHOD_END"], "methodName": ["isInTrash"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . isTrashEnabled ( group )  ;", "}", "METHOD_END"], "methodName": ["isTrashEnabled"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . isTrashEnabled ( groupId )  ;", "}", "METHOD_END"], "methodName": ["isTrashEnabled"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "return   TrashUtil . getTrash (  )  . isValidTrashTitle ( title )  ;", "}", "METHOD_END"], "methodName": ["isValidTrashTitle"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}, {"methodBody": ["METHOD_START", "{", "PortalRuntimePermission . checkSetBeanProperty ( getClass (  )  )  ;", ".  _ trash    =    trash ;", "}", "METHOD_END"], "methodName": ["setTrash"], "fileName": "com.liferay.trash.kernel.util.TrashUtil"}]