[{"methodBody": ["METHOD_START", "{", "_ originalDynamicPolicy    =    DynamicPolicyFactory . getInstance (  )  ;", "final   DynamicPolicy   originalDynamicPolicy    =     _ originalDynamicPolicy ;", "DynamicPolicy   dynamicPolicy    =    new   DynamicPolicy (  )     {", "@ Override", "public   PermissionCollection   getPermissions ( CodeSource   codeSource ,    Map   map )     {", "Policy   policy    =    Policy . getPolicy (  )  ;", "return   policy . getPermissions ( codeSource )  ;", "}", "@ Override", "public   ProtectionDomain   getProtectionDomain ( CodeSource   codeSource )     {", "if    ( originalDynamicPolicy    =  =    null )     {", "return   null ;", "}", "return   originalDynamicPolicy . getProtectionDomain ( codeSource )  ;", "}", "@ Override", "public   void   getSecurityPolicy ( Map   map 1  ,    Map   map 2  )     {", "if    ( originalDynamicPolicy    =  =    null )     {", "return ;", "}", "originalDynamicPolicy . getSecurityPolicy ( map 1  ,    map 2  )  ;", "}", "@ Override", "public   void   removePolicy ( Map   map )     {", "if    ( originalDynamicPolicy    =  =    null )     {", "return ;", "}", "originalDynamicPolicy . removePolicy ( map )  ;", "}", "@ Override", "public   void   setupPolicy ( Map   map )     {", "if    ( originalDynamicPolicy    =  =    null )     {", "return ;", "}", "originalDynamicPolicy . setupPolicy ( map )  ;", "}", "}  ;", "DynamicPolicyFactory . setInstance ( dynamicPolicy )  ;", "}", "METHOD_END"], "methodName": ["start"], "fileName": "com.liferay.support.websphere.DynamicPolicyHelper"}]