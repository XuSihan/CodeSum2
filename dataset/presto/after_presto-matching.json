[{"methodBody": ["METHOD_START", "{", "return   description ;", "}", "METHOD_END"], "methodName": ["description"], "fileName": "com.facebook.presto.matching.Capture"}, {"methodBody": ["METHOD_START", "{", "return   Capture . newCapture (  \"  \"  )  ;", "}", "METHOD_END"], "methodName": ["newCapture"], "fileName": "com.facebook.presto.matching.Capture"}, {"methodBody": ["METHOD_START", "{", "return   new   Capture <  >  (  (  ( description    +     \"  @  \"  )     +     ( Capture . sequenceCounter . incrementAndGet (  )  )  )  )  ;", "}", "METHOD_END"], "methodName": ["newCapture"], "fileName": "com.facebook.presto.matching.Capture"}, {"methodBody": ["METHOD_START", "{", "if    (  ( this )     =  =     ( Captures . NIL )  )     {", "return   other ;", "} else    {", "return   new   Captures ( capture ,    value ,    tail . addAll ( other )  )  ;", "}", "}", "METHOD_END"], "methodName": ["addAll"], "fileName": "com.facebook.presto.matching.Captures"}, {"methodBody": ["METHOD_START", "{", "return   Captures . NIL ;", "}", "METHOD_END"], "methodName": ["empty"], "fileName": "com.facebook.presto.matching.Captures"}, {"methodBody": ["METHOD_START", "{", "if    ( this . equals ( Captures . NIL )  )     {", "throw   new   NoSuchElementException (  \" Requested   value   for   unknown   Capture .    Was   it   registered   in   the   Pattern ?  \"  )  ;", "} else", "if    ( this . capture . equals ( capture )  )     {", "return    (  ( T )     ( value )  )  ;", "} else    {", "return   tail . get ( capture )  ;", "}", "}", "METHOD_END"], "methodName": ["get"], "fileName": "com.facebook.presto.matching.Captures"}, {"methodBody": ["METHOD_START", "{", "return   capture    =  =    null    ?    Captures . empty (  )     :    new   Captures ( capture ,    value ,    Captures . NIL )  ;", "}", "METHOD_END"], "methodName": ["ofNullable"], "fileName": "com.facebook.presto.matching.Captures"}, {"methodBody": ["METHOD_START", "{", "result . append ( repeat (  \"  \\ t \"  ,    level )  )  . append ( String . format (  ( template    +     \"  \\ n \"  )  ,    arguments )  )  ;", "}", "METHOD_END"], "methodName": ["appendLine"], "fileName": "com.facebook.presto.matching.DefaultPrinter"}, {"methodBody": ["METHOD_START", "{", "return   result . toString (  )  ;", "}", "METHOD_END"], "methodName": ["result"], "fileName": "com.facebook.presto.matching.DefaultPrinter"}, {"methodBody": ["METHOD_START", "{", "return   captures (  )  . get ( capture )  ;", "}", "METHOD_END"], "methodName": ["capture"], "fileName": "com.facebook.presto.matching.Match"}, {"methodBody": ["METHOD_START", "{", "return   new   Match . Empty <  >  (  )  ;", "}", "METHOD_END"], "methodName": ["empty"], "fileName": "com.facebook.presto.matching.Match"}, {"methodBody": ["METHOD_START", "{", "return    !  ( isPresent (  )  )  ;", "}", "METHOD_END"], "methodName": ["isEmpty"], "fileName": "com.facebook.presto.matching.Match"}, {"methodBody": ["METHOD_START", "{", "Captures   result ;", "Objects . requireNonNull ( captures )  ;", "return   new    . Present <  >  ( value ,    captures )  ;", "}", "METHOD_END"], "methodName": ["of"], "fileName": "com.facebook.presto.matching.Match"}, {"methodBody": ["METHOD_START", "{", "return   isPresent (  )     ?    value (  )     :    fallback ;", "}", "METHOD_END"], "methodName": ["orElse"], "fileName": "com.facebook.presto.matching.Match"}, {"methodBody": ["METHOD_START", "{", "return   match ( pattern ,    object ,    Captures . empty (  )  )  ;", "}", "METHOD_END"], "methodName": ["match"], "fileName": "com.facebook.presto.matching.Matcher"}, {"methodBody": ["METHOD_START", "{", "return   Pattern . typeOf ( Object . class )  ;", "}", "METHOD_END"], "methodName": ["any"], "fileName": "com.facebook.presto.matching.Pattern"}, {"methodBody": ["METHOD_START", "{", "return   new   CapturePattern <  >  ( capture ,    this )  ;", "}", "METHOD_END"], "methodName": ["capturedAs"], "fileName": "com.facebook.presto.matching.Pattern"}, {"methodBody": ["METHOD_START", "{", "return   PropertyPattern . upcast ( property . matching ( Iterables :  : isEmpty )  )  ;", "}", "METHOD_END"], "methodName": ["empty"], "fileName": "com.facebook.presto.matching.Pattern"}, {"methodBody": ["METHOD_START", "{", "return   DefaultMatcher . DEFAULT _ MATCHER . match ( this ,    object )  . isPresent (  )  ;", "}", "METHOD_END"], "methodName": ["matches"], "fileName": "com.facebook.presto.matching.Pattern"}, {"methodBody": ["METHOD_START", "{", "return   new   FilterPattern <  >  ( predicate ,    this )  ;", "}", "METHOD_END"], "methodName": ["matching"], "fileName": "com.facebook.presto.matching.Pattern"}, {"methodBody": ["METHOD_START", "{", "return   PropertyPattern . upcast ( property . matching ( not ( Iterables :  : isEmpty )  )  )  ;", "}", "METHOD_END"], "methodName": ["nonEmpty"], "fileName": "com.facebook.presto.matching.Pattern"}, {"methodBody": ["METHOD_START", "{", "return   previous ;", "}", "METHOD_END"], "methodName": ["previous"], "fileName": "com.facebook.presto.matching.Pattern"}, {"methodBody": ["METHOD_START", "{", "return   new   TypeOfPattern <  >  ( expectedClass )  ;", "}", "METHOD_END"], "methodName": ["typeOf"], "fileName": "com.facebook.presto.matching.Pattern"}, {"methodBody": ["METHOD_START", "{", "return   new   WithPattern <  >  ( pattern ,    this )  ;", "}", "METHOD_END"], "methodName": ["with"], "fileName": "com.facebook.presto.matching.Pattern"}, {"methodBody": ["METHOD_START", "{", "Pattern   previous    =    pattern . previous (  )  ;", "if    ( previous    !  =    null )     {", "previous . accept ( this )  ;", "}", "}", "METHOD_END"], "methodName": ["visitPrevious"], "fileName": "com.facebook.presto.matching.PatternVisitor"}, {"methodBody": ["METHOD_START", "{", "Pattern < T >    matchAll    =     (  ( Pattern < T >  )     ( Pattern . any (  )  )  )  ;", "return    ( matchAll . capturedAs ( capture )  )  ;", "}", "METHOD_END"], "methodName": ["capturedAs"], "fileName": "com.facebook.presto.matching.Property"}, {"methodBody": ["METHOD_START", "{", "return   matching ( new   EqualsPattern <  >  ( expectedValue ,    null )  )  ;", "}", "METHOD_END"], "methodName": ["equalTo"], "fileName": "com.facebook.presto.matching.Property"}, {"methodBody": ["METHOD_START", "{", "return   function :  : apply ;", "}", "METHOD_END"], "methodName": ["getFunction"], "fileName": "com.facebook.presto.matching.Property"}, {"methodBody": ["METHOD_START", "{", "return   name ;", "}", "METHOD_END"], "methodName": ["getName"], "fileName": "com.facebook.presto.matching.Property"}, {"methodBody": ["METHOD_START", "{", "return   PropertyPattern . of ( this ,    pattern )  ;", "}", "METHOD_END"], "methodName": ["matching"], "fileName": "com.facebook.presto.matching.Property"}, {"methodBody": ["METHOD_START", "{", "return   matching ( new   FilterPattern <  >  ( predicate ,    null )  )  ;", "}", "METHOD_END"], "methodName": ["matching"], "fileName": "com.facebook.presto.matching.Property"}, {"methodBody": ["METHOD_START", "{", "return   new   Property <  >  ( name ,    function )  ;", "}", "METHOD_END"], "methodName": ["optionalProperty"], "fileName": "com.facebook.presto.matching.Property"}, {"methodBody": ["METHOD_START", "{", "return   Property . optionalProperty ( name ,     (    source )     -  >    Optional . of ( function . apply ( source )  )  )  ;", "}", "METHOD_END"], "methodName": ["property"], "fileName": "com.facebook.presto.matching.Property"}, {"methodBody": ["METHOD_START", "{", "return   pattern ;", "}", "METHOD_END"], "methodName": ["getPattern"], "fileName": "com.facebook.presto.matching.PropertyPattern"}, {"methodBody": ["METHOD_START", "{", "return   property ;", "}", "METHOD_END"], "methodName": ["getProperty"], "fileName": "com.facebook.presto.matching.PropertyPattern"}, {"methodBody": ["METHOD_START", "{", "return   new   PropertyPattern <  >  ( property ,    pattern )  ;", "}", "METHOD_END"], "methodName": ["of"], "fileName": "com.facebook.presto.matching.PropertyPattern"}, {"methodBody": ["METHOD_START", "{", "return    (  ( PropertyPattern < F ,    T >  )     ( propertyPattern )  )  ;", "}", "METHOD_END"], "methodName": ["upcast"], "fileName": "com.facebook.presto.matching.PropertyPattern"}, {"methodBody": ["METHOD_START", "{", "return   assertMatch ( pattern ,    expectedMatch ,    expectedMatch )  ;", "}", "METHOD_END"], "methodName": ["assertMatch"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "Match < R >    match    =    DefaultMatcher . DEFAULT _ MATCHER . match ( pattern ,    matchedAgainst )  ;", "assertEquals ( expectedMatch ,    match . value (  )  )  ;", "return   match ;", "}", "METHOD_END"], "methodName": ["assertMatch"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "Match < T >    match    =    DefaultMatcher . DEFAULT _ MATCHER . match ( pattern ,    expectedNoMatch )  ;", "assertEquals ( Match . empty (  )  ,    match )  ;", "}", "METHOD_END"], "methodName": ["assertNoMatch"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "Capture < FilterNode >    filter    =    Capture . newCapture (  )  ;", "Capture < ScanNode >    scan    =    Capture . newCapture (  )  ;", "Capture < String >    name    =    Capture . newCapture (  )  ;", "Pattern < ProjectNode >    pattern    =    Patterns . project (  )  . with ( Patterns . source (  )  ( Patterns . filter (  )  . capturedAs ( filter )  . with ( Patterns . source (  )  ( Patterns . scan (  )  . capturedAs ( scan )  . with ( Patterns . tableName (  )  . capturedAs ( name )  )  )  )  )  )  ;", "ProjectNode   tree    =    new   ProjectNode ( new   FilterNode ( new   ScanNode (  \" orders \"  )  ,    null )  )  ;", "Match < ProjectNode >    match    =    assertMatch ( pattern ,    tree )  ;", "FilterNode   capturedFilter    =    match . capture ( filter )  ;", "assertEquals ( tree . getSource (  )  ,    capturedFilter )  ;", "assertEquals (  (  ( FilterNode )     ( tree . getSource (  )  )  )  . getSource (  )  ,    match . capture ( scan )  )  ;", "assertEquals (  \" orders \"  ,    match . capture ( name )  )  ;", "}", "METHOD_END"], "methodName": ["capturingMatchesInATypesafeManner"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "String   matchedValue    =     \" A   little   string .  \"  ;", "Pattern < String >    pattern    =    Pattern . typeOf ( String . class )  (  (    s )     -  >    s . startsWith (  \" A \"  )  )  (  ( CharSequence   s )     -  >     ( s . length (  )  )     >     7  )  ;", "assertMatch ( pattern ,    matchedValue )  ;", "}", "METHOD_END"], "methodName": ["matchAdditionalProperties"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "Pattern < ProjectNode >    pattern    =    Patterns . project (  )  . with ( Patterns . source (  )  . matching ( Patterns . scan (  )  )  )  ;", "assertMatch ( pattern ,    new   ProjectNode ( new   ScanNode (  \" t \"  )  )  )  ;", "assertNoMatch ( pattern ,    new   ScanNode (  \" t \"  )  )  ;", "assertNoMatch ( pattern ,    new   ProjectNode ( new   ProjectNode ( null )  )  )  ;", "}", "METHOD_END"], "methodName": ["matchNestedProperties"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "assertMatch ( Patterns . project (  )  ,    new   ProjectNode ( null )  )  ;", "assertNoMatch ( Patterns . project (  )  ,    new   ScanNode (  \" t \"  )  )  ;", "}", "METHOD_END"], "methodName": ["matchObject"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "Capture < Void >    impossible    =    Capture . newCapture (  )  ;", "Pattern < Void >    pattern    =    Pattern . typeOf ( Void . class )  . capturedAs ( impossible )  ;", "Match < Void >    match    =    Defaul . DEFAULT _ MATCHER . match ( pattern ,     4  2  )  ;", "assertTrue ( match . isEmpty (  )  )  ;", "Throwable   throwable    =    expectThrows ( NoSuchElementException . class ,     (  )     -  >    match . capture ( impossible )  )  ;", "assertTrue ( throwable . getMessage (  )  . contains (  \" Captures   are   undefined   for   an   empty   Match \"  )  )  ;", "}", "METHOD_END"], "methodName": ["noMatchMeansNoCaptures"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "assertNoMatch ( Pattern . any (  )  ,    null )  ;", "assertNoMatch ( Pattern . typeOf ( Integer . class )  ,    null )  ;", "}", "METHOD_END"], "methodName": ["nullNotMatchedByDefault"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "Property < RelNode ,    RelNode >    onlySource    =    Property . optionalProperty (  \" onlySource \"  ,     (    node )     -  >    Optional . of ( node . getSources (  )  )  . filter (  (    sources )     -  >     ( sources . size (  )  )     =  =     1  )  . map (  ( List < RelNode >    sources )     -  >    sources . get (  0  )  )  )  ;", "Pattern < RelNode >    relNodeWithExactlyOneSource    =    Patterns . plan (  )  . with ( onlySource ( Pattern . any (  )  )  )  ;", "assertMatch ( relNodeWithExactlyOneSource ,    new   ProjectNode ( new   ScanNode (  \" t \"  )  )  )  ;", "assertNoMatch ( relNodeWithExactlyOneSource ,    new   ScanNode (  \" t \"  )  )  ;", "assertNoMatch ( relNodeWithExactlyOneSource ,    new   JoinNode ( new   ScanNode (  \" t \"  )  ,    new   ScanNode (  \" t \"  )  )  )  ;", "}", "METHOD_END"], "methodName": ["optionalProperties"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "Pattern < String >    aString    =    Pattern . typeOf ( String . class )  ;", "Property < String ,    Integer >    length    =    Property . property (  \" length \"  ,    String :  : length )  ;", "String   string    =     \" a \"  ;", "assertMatch ( aString . with ( length . equalTo (  1  )  )  ,    string )  ;", "assertMatch ( Patterns . project (  )  . with ( Patterns . source (  )  ( Patterns . scan (  )  )  )  ,    new   ProjectNode ( new   ScanNode (  \" T \"  )  )  )  ;", "assertMatch ( aString . with ( length ( Pattern . any (  )  )  )  ,    string )  ;", "assertMatch ( aString . with ( length (  (    x )     -  >    x    >     0  )  )  ,    string )  ;", "assertMatch ( aString . with ( length (  ( Number   x )     -  >     ( x . intValue (  )  )     >     0  )  )  ,    string )  ;", "assertNoMatch ( aString . with ( length . equalTo (  0  )  )  ,    string )  ;", "assertNoMatch ( Patterns . project (  )  . with ( Patterns . source (  )  ( Patterns . scan (  )  )  )  ,    new   ProjectNode ( new   ProjectNode ( new   ScanNode (  \" T \"  )  )  )  )  ;", "assertNoMatch ( aString . with ( length ( Pattern . typeOf ( Void . class )  )  )  ,    string )  ;", "assertNoMatch ( aString . with ( length (  (    x )     -  >    x    <     1  )  )  ,    string )  ;", "assertNoMatch ( aString . with ( length (  ( Number   x )     -  >     ( x . intValue (  )  )     <     1  )  )  ,    string )  ;", "}", "METHOD_END"], "methodName": ["propertyMatchers"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "assertMatch ( Pattern . any (  )  ,     4  2  )  ;", "assertMatch ( Pattern . any (  )  ,     \" John   Doe \"  )  ;", "assertMatch ( Pattern . typeOf ( Integer . class )  ,     4  2  )  ;", "assertMatch ( Pattern . typeOf ( Number . class )  ,     4  2  )  ;", "assertNoMatch ( Pattern . typeOf ( Integer . class )  ,     \" John   Doe \"  )  ;", "assertMatch ( Pattern . typeOf ( Integer . class )  (  (    x )     -  >    x    >     0  )  ,     4  2  )  ;", "assertNoMatch ( Pattern . typeOf ( Integer . class )  (  (    x )     -  >    x    >     0  )  ,     (  -  1  )  )  ;", "}", "METHOD_END"], "methodName": ["trivialMatchers"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "Pattern <  ?  >    pattern    =    Pattern . any (  )  ;", "Capture <  ?  >    unknownCapture    =    Capture . newCapture (  )  ;", "Match <  ?  >    match    =    Defaul . DEFAULT _ MATCHER . match ( pattern ,     4  2  )  ;", "Throwable   throwable    =    expectThrows ( NoSuchElementException . class ,     (  )     -  >    match . capture ( unknownCapture )  )  ;", "assertTrue ( throwable . getMessage (  )  . contains (  \" unknown   Capture \"  )  )  ;", "}", "METHOD_END"], "methodName": ["unknownCaptureIsAnError"], "fileName": "com.facebook.presto.matching.TestMatcher"}, {"methodBody": ["METHOD_START", "{", "return   predicate ;", "}", "METHOD_END"], "methodName": ["getPredicate"], "fileName": "com.facebook.presto.matching.example.rel.FilterNode"}, {"methodBody": ["METHOD_START", "{", "return   build ;", "}", "METHOD_END"], "methodName": ["getBuild"], "fileName": "com.facebook.presto.matching.example.rel.JoinNode"}, {"methodBody": ["METHOD_START", "{", "return   probe ;", "}", "METHOD_END"], "methodName": ["getProbe"], "fileName": "com.facebook.presto.matching.example.rel.JoinNode"}, {"methodBody": ["METHOD_START", "{", "return   Property . property (  \" build \"  ,    JoinNode :  : getBuild )  ;", "}", "METHOD_END"], "methodName": ["build"], "fileName": "com.facebook.presto.matching.example.rel.Patterns"}, {"methodBody": ["METHOD_START", "{", "return   Pattern . typeOf ( FilterNode . class )  ;", "}", "METHOD_END"], "methodName": ["filter"], "fileName": "com.facebook.presto.matching.example.rel.Patterns"}, {"methodBody": ["METHOD_START", "{", "return   Pattern . typeOf ( JoinNode . class )  ;", "}", "METHOD_END"], "methodName": ["join"], "fileName": "com.facebook.presto.matching.example.rel.Patterns"}, {"methodBody": ["METHOD_START", "{", "return   Pattern . typeOf ( RelNode . class )  ;", "}", "METHOD_END"], "methodName": ["plan"], "fileName": "com.facebook.presto.matching.example.rel.Patterns"}, {"methodBody": ["METHOD_START", "{", "return   Property . property (  \" probe \"  ,    JoinNode :  : getProbe )  ;", "}", "METHOD_END"], "methodName": ["probe"], "fileName": "com.facebook.presto.matching.example.rel.Patterns"}, {"methodBody": ["METHOD_START", "{", "return   Pattern . typeOf ( ProjectNode . class )  ;", "}", "METHOD_END"], "methodName": ["project"], "fileName": "com.facebook.presto.matching.example.rel.Patterns"}, {"methodBody": ["METHOD_START", "{", "return   Pattern . typeOf ( ScanNode . class )  ;", "}", "METHOD_END"], "methodName": ["scan"], "fileName": "com.facebook.presto.matching.example.rel.Patterns"}, {"methodBody": ["METHOD_START", "{", "return   Property . property (  \" source \"  ,    SingleSourceRelNode :  : getSource )  ;", "}", "METHOD_END"], "methodName": ["source"], "fileName": "com.facebook.presto.matching.example.rel.Patterns"}, {"methodBody": ["METHOD_START", "{", "return   Property . property (  \" tableName \"  ,    ScanNode :  : getTableName )  ;", "}", "METHOD_END"], "methodName": ["tableName"], "fileName": "com.facebook.presto.matching.example.rel.Patterns"}, {"methodBody": ["METHOD_START", "{", "return   source ;", "}", "METHOD_END"], "methodName": ["getSource"], "fileName": "com.facebook.presto.matching.example.rel.ProjectNode"}, {"methodBody": ["METHOD_START", "{", "return   tableName ;", "}", "METHOD_END"], "methodName": ["getTableName"], "fileName": "com.facebook.presto.matching.example.rel.ScanNode"}, {"methodBody": ["METHOD_START", "{", "return   Collections . singletonList ( getSource (  )  )  ;", "}", "METHOD_END"], "methodName": ["getSources"], "fileName": "com.facebook.presto.matching.example.rel.SingleSourceRelNode"}, {"methodBody": ["METHOD_START", "{", "return   capture ;", "}", "METHOD_END"], "methodName": ["capture"], "fileName": "com.facebook.presto.matching.pattern.CapturePattern"}, {"methodBody": ["METHOD_START", "{", "return   expectedValue ;", "}", "METHOD_END"], "methodName": ["expectedValue"], "fileName": "com.facebook.presto.matching.pattern.EqualsPattern"}, {"methodBody": ["METHOD_START", "{", "return   predicate ;", "}", "METHOD_END"], "methodName": ["predicate"], "fileName": "com.facebook.presto.matching.pattern.FilterPattern"}, {"methodBody": ["METHOD_START", "{", "return   expectedClass ;", "}", "METHOD_END"], "methodName": ["expectedClass"], "fileName": "com.facebook.presto.matching.pattern.TypeOfPattern"}, {"methodBody": ["METHOD_START", "{", "return   propertyPattern . getPattern (  )  ;", "}", "METHOD_END"], "methodName": ["getPattern"], "fileName": "com.facebook.presto.matching.pattern.WithPattern"}, {"methodBody": ["METHOD_START", "{", "return   propertyPattern . getProperty (  )  ;", "}", "METHOD_END"], "methodName": ["getProperty"], "fileName": "com.facebook.presto.matching.pattern.WithPattern"}]