[{"methodBody": ["METHOD_START", "{", "TestingPrestoServerLauncher   launcher    =    SingleCommand . singleCommand ( TestingPrestoServerLauncher . class )  . parse ( args )  ;", "if    ( launcher . helpOption . showHelpIfRequested (  )  )     {", "return ;", "}", "try    {", "launcher . validateOptions (  )  ;", "}    catch    ( IllegalStateException   e )     {", "System . out . println (  (  \" ERROR :     \"     +     ( e . getMessage (  )  )  )  )  ;", "System . out . println (  )  ;", "Help . help ( launcher . commandMetadata )  ;", "return ;", "}", "launcher . run (  )  ;", "}", "METHOD_END"], "methodName": ["main"], "fileName": "com.facebook.presto.server.testing.TestingPrestoServerLauncher"}, {"methodBody": ["METHOD_START", "{", "try    ( TestingPrestoServer   server    =    new   TestingPrestoServer (  )  )     {", "for    ( String   pluginClass    :    options . getPluginClassNames (  )  )     {", "Plugin   plugin    =     (  ( Plugin )     ( Class . forName ( pluginClass )  . newInstance (  )  )  )  ;", "server . installPlugin ( plugin )  ;", "}", "for    ( Options . Catalog   catalog    :    options . getCatalogs (  )  )     {", "server . createCatalog ( catalog . getCatalogName (  )  ,    catalog . getConnectorName (  )  )  ;", "}", "System . out . println ( server . getAddress (  )  )  ;", ". waitForInterruption (  )  ;", "}", "}", "METHOD_END"], "methodName": ["run"], "fileName": "com.facebook.presto.server.testing.TestingPrestoServerLauncher"}, {"methodBody": ["METHOD_START", "{", "options . validate (  )  ;", "}", "METHOD_END"], "methodName": ["validateOptions"], "fileName": "com.facebook.presto.server.testing.TestingPrestoServerLauncher"}, {"methodBody": ["METHOD_START", "{", "try    {", "Thad . curntThad (  )  . join (  )  ;", "}    catch    ( InterruptedException   e )     {", "Thad . curntThad (  )  . interrupt (  )  ;", "}", "}", "METHOD_END"], "methodName": ["waitForInterruption"], "fileName": "com.facebook.presto.server.testing.TestingPrestoServerLauncher"}, {"methodBody": ["METHOD_START", "{", "return   catalogOptions . stream (  )  . map (  (    catalogOption )     -  >     {", "List < String >    parts    =    ImmutableList . copyOf (  . CATALOG _ OPTION _ SPLITTER . split ( catalogOption )  )  ;", "checkState (  (  ( parts . size (  )  )     =  =     2  )  ,     \" bad   format   of   catalog   definition    '  % s '  ;    should   be   catalog _ name : connector _ name \"  ,    catalogOption )  ;", "return   new    . Catalog ( parts . get (  0  )  ,    parts . get (  1  )  )  ;", "}  )  . collect ( Collectors . toList (  )  )  ;", "}", "METHOD_END"], "methodName": ["getCatalogs"], "fileName": "com.facebook.presto.server.testing.TestingPrestoServerLauncherOptions"}, {"methodBody": ["METHOD_START", "{", "return   pluginClassNames ;", "}", "METHOD_END"], "methodName": ["getPluginClassNames"], "fileName": "com.facebook.presto.server.testing.TestingPrestoServerLauncherOptions"}, {"methodBody": ["METHOD_START", "{", "checkState (  (  !  ( pluginClassNames . isEmpty (  )  )  )  ,     \" some   plugins   must   be   defined \"  )  ;", "checkState (  (  !  ( catalog . isEmpty (  )  )  )  ,     \" some   catalogs   must   be   defined \"  )  ;", "getCatalogs (  )  ;", "}", "METHOD_END"], "methodName": ["validate"], "fileName": "com.facebook.presto.server.testing.TestingPrestoServerLauncherOptions"}]