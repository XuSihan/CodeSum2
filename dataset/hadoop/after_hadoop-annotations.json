[{"methodBody": ["METHOD_START", "{", "return   LanguageVersion . JAVA _  1  _  5  ;", "}", "METHOD_END"], "methodName": ["languageVersion"], "fileName": "org.apache.hadoop.classification.tools.ExcludePrivateAnnotationsJDiffDoclet"}, {"methodBody": ["METHOD_START", "{", "Integer   length    =    StabilityOptions . optionLength ( option )  ;", "if    ( length    !  =    null )     {", "return   length ;", "}", "return   JDiff . optionLength ( option )  ;", "}", "METHOD_END"], "methodName": ["optionLength"], "fileName": "org.apache.hadoop.classification.tools.ExcludePrivateAnnotationsJDiffDoclet"}, {"methodBody": ["METHOD_START", "{", "System . out . println ( ExcludePrivateAnnotationsJDiffDoclet . class . getSimpleName (  )  )  ;", "return   JDiff . start ( RootDocProcessor . process ( root )  )  ;", "}", "METHOD_END"], "methodName": ["start"], "fileName": "org.apache.hadoop.classification.tools.ExcludePrivateAnnotationsJDiffDoclet"}, {"methodBody": ["METHOD_START", "{", "StabilityOptions . validOptions ( options ,    reporter )  ;", "String [  ]  [  ]    filteredOptions    =    StabilityOptions . filterOptions ( options )  ;", "return   JDiff . validOptions ( filteredOptions ,    reporter )  ;", "}", "METHOD_END"], "methodName": ["validOptions"], "fileName": "org.apache.hadoop.classification.tools.ExcludePrivateAnnotationsJDiffDoclet"}, {"methodBody": ["METHOD_START", "{", "return   LanguageVersion . JAVA _  1  _  5  ;", "}", "METHOD_END"], "methodName": ["languageVersion"], "fileName": "org.apache.hadoop.classification.tools.ExcludePrivateAnnotationsStandardDoclet"}, {"methodBody": ["METHOD_START", "{", "Integer   length    =    StabilityOptions . optionLength ( option )  ;", "if    ( length    !  =    null )     {", "return   length ;", "}", "return    . optionLength ( option )  ;", "}", "METHOD_END"], "methodName": ["optionLength"], "fileName": "org.apache.hadoop.classification.tools.ExcludePrivateAnnotationsStandardDoclet"}, {"methodBody": ["METHOD_START", "{", "System . out . println ( ExcludePrivateAnnotationsStandardDoclet . class . getSimpleName (  )  )  ;", "return   Standard . start ( RootDocProcessor . process ( root )  )  ;", "}", "METHOD_END"], "methodName": ["start"], "fileName": "org.apache.hadoop.classification.tools.ExcludePrivateAnnotationsStandardDoclet"}, {"methodBody": ["METHOD_START", "{", "StabilityOptions . validOptions ( options ,    reporter )  ;", "String [  ]  [  ]    filteredOptions    =    StabilityOptions . filterOptions ( options )  ;", "return    . validOptions ( filteredOptions ,    reporter )  ;", "}", "METHOD_END"], "methodName": ["validOptions"], "fileName": "org.apache.hadoop.classification.tools.ExcludePrivateAnnotationsStandardDoclet"}, {"methodBody": ["METHOD_START", "{", "return   LanguageVersion . JAVA _  1  _  5  ;", "}", "METHOD_END"], "methodName": ["languageVersion"], "fileName": "org.apache.hadoop.classification.tools.IncludePublicAnnotationsStandardDoclet"}, {"methodBody": ["METHOD_START", "{", "Integer   length    =    StabilityOptions . optionLength ( option )  ;", "if    ( length    !  =    null )     {", "return   length ;", "}", "return    . optionLength ( option )  ;", "}", "METHOD_END"], "methodName": ["optionLength"], "fileName": "org.apache.hadoop.classification.tools.IncludePublicAnnotationsStandardDoclet"}, {"methodBody": ["METHOD_START", "{", "System . out . println ( IncludePublicAnnotationsStandardDoclet . class . getSimpleName (  )  )  ;", "RootDocProcessor . treatUnannotatedClassesAsPrivate    =    true ;", "return   Standard . start ( RootDocProcessor . process ( root )  )  ;", "}", "METHOD_END"], "methodName": ["start"], "fileName": "org.apache.hadoop.classification.tools.IncludePublicAnnotationsStandardDoclet"}, {"methodBody": ["METHOD_START", "{", "StabilityOptions . validOptions ( options ,    reporter )  ;", "String [  ]  [  ]    filteredOptions    =    StabilityOptions . filterOptions ( options )  ;", "return    . validOptions ( filteredOptions ,    reporter )  ;", "}", "METHOD_END"], "methodName": ["validOptions"], "fileName": "org.apache.hadoop.classification.tools.IncludePublicAnnotationsStandardDoclet"}, {"methodBody": ["METHOD_START", "{", "Object   proxy    =    RootDocProcessor . proxies . get ( obj )  ;", "if    ( proxy    =  =    null )     {", "proxy    =    Proxy . newProxyInstance ( obj . getClass (  )  . getClassLoader (  )  ,    obj . getClass (  )  . getInterfaces (  )  ,    new   RootDocProcessor . ExcludeHandler ( obj )  )  ;", "RootDocProcessor . proxies . put ( obj ,    proxy )  ;", "}", "return   proxy ;", "}", "METHOD_END"], "methodName": ["getProxy"], "fileName": "org.apache.hadoop.classification.tools.RootDocProcessor"}, {"methodBody": ["METHOD_START", "{", "return    (  ( RootDoc )     ( RootDocProcessor . process ( root ,    RootDoc . class )  )  )  ;", "}", "METHOD_END"], "methodName": ["process"], "fileName": "org.apache.hadoop.classification.tools.RootDocProcessor"}, {"methodBody": ["METHOD_START", "{", "if    ( obj    =  =    null )     {", "return   null ;", "}", "Class <  ?  >    cls    =    obj . getClass (  )  ;", "if    ( cls . getName (  )  . startsWith (  \" com . sun .  \"  )  )     {", "return    . getProxy ( obj )  ;", "} else", "if    ( obj   instanceof   Object [  ]  )     {", "Class <  ?  >    componentType    =     ( type . isArray (  )  )     ?    type . getComponentType (  )     :    cls . getComponentType (  )  ;", "Object [  ]    array    =     (  ( Object [  ]  )     ( obj )  )  ;", "Object [  ]    newArray    =     (  ( Object [  ]  )     ( newInstance ( componentType ,    array . length )  )  )  ;", "for    ( int   i    =     0  ;    i    <     ( array . length )  ;     +  + i )     {", "newArray [ i ]     =     . process ( array [ i ]  ,    componentType )  ;", "}", "return   newArray ;", "}", "return   obj ;", "}", "METHOD_END"], "methodName": ["process"], "fileName": "org.apache.hadoop.classification.tools.RootDocProcessor"}, {"methodBody": ["METHOD_START", "{", "List < String [  ]  >    optionsList    =    new   ArrayList < String [  ]  >  (  )  ;", "for    ( int   i    =     0  ;    i    <     ( options . length )  ;    i +  +  )     {", "if    (  (  (  !  ( options [ i ]  [  0  ]  . equalsIgnoreCase (  . UNSTABLE _ OPTION )  )  )     &  &     (  !  ( options [ i ]  [  0  ]  . equalsIgnoreCase (  . EVOLVING _ OPTION )  )  )  )     &  &     (  !  ( options [ i ]  [  0  ]  . equalsIgnoreCase (  . STABLE _ OPTION )  )  )  )     {", "optionsList . add ( options [ i ]  )  ;", "}", "}", "String [  ]  [  ]    filteredOptions    =    new   String [ optionsList . size (  )  ]  [  ]  ;", "int   i    =     0  ;", "for    ( String [  ]    option    :    optionsList )     {", "filteredOptions [  ( i +  +  )  ]     =    option ;", "}", "return   filteredOptions ;", "}", "METHOD_END"], "methodName": ["filterOptions"], "fileName": "org.apache.hadoop.classification.tools.StabilityOptions"}, {"methodBody": ["METHOD_START", "{", "String   opt    =    option . toLowerCase (  )  ;", "if    ( opt . equals (  . UNSTABLE _ OPTION )  )", "return    1  ;", "if    ( opt . equals (  . EVOLVING _ OPTION )  )", "return    1  ;", "if    ( opt . equals (  . STABLE _ OPTION )  )", "return    1  ;", "return   null ;", "}", "METHOD_END"], "methodName": ["optionLength"], "fileName": "org.apache.hadoop.classification.tools.StabilityOptions"}, {"methodBody": ["METHOD_START", "{", "for    ( int   i    =     0  ;    i    <     ( options . length )  ;    i +  +  )     {", "String   opt    =    options [ i ]  [  0  ]  . toLowerCase (  )  ;", "if    ( opt . equals (  . UNSTABLE _ OPTION )  )     {", "RootDocProcessor . stability    =     . UNSTABLE _ OPTION ;", "} else", "if    ( opt . equals (  . EVOLVING _ OPTION )  )     {", "RootDocProcessor . stability    =     . EVOLVING _ OPTION ;", "} else", "if    ( opt . equals (  . STABLE _ OPTION )  )     {", "RootDocProcessor . stability    =     . STABLE _ OPTION ;", "}", "}", "}", "METHOD_END"], "methodName": ["validOptions"], "fileName": "org.apache.hadoop.classification.tools.StabilityOptions"}]